{"version":3,"file":"apideck.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/gen/crm/runtime.ts","../src/gen/crm/models/Address.ts","../src/gen/crm/models/Contact.ts","../src/gen/crm/models/PhoneNumber.ts","../src/gen/crm/models/BadRequest.ts","../src/gen/crm/models/BankAccount.ts","../src/gen/crm/models/Company.ts","../src/gen/crm/models/CreateCompanyResponse.ts","../src/gen/crm/models/CreateContactResponse.ts","../src/gen/crm/models/CreateLeadResponse.ts","../src/gen/crm/models/CreateOpportunityResponse.ts","../src/gen/crm/models/CustomField.ts","../src/gen/crm/models/DeleteCompanyResponse.ts","../src/gen/crm/models/DeleteContactResponse.ts","../src/gen/crm/models/DeleteLeadResponse.ts","../src/gen/crm/models/DeleteOpportunityResponse.ts","../src/gen/crm/models/Email.ts","../src/gen/crm/models/GetCompaniesResponse.ts","../src/gen/crm/models/GetCompanyResponse.ts","../src/gen/crm/models/GetContactResponse.ts","../src/gen/crm/models/GetContactsResponse.ts","../src/gen/crm/models/GetLeadResponse.ts","../src/gen/crm/models/GetLeadsResponse.ts","../src/gen/crm/models/GetOpportunitiesResponse.ts","../src/gen/crm/models/GetOpportunityResponse.ts","../src/gen/crm/models/Lead.ts","../src/gen/crm/models/Links.ts","../src/gen/crm/models/Meta.ts","../src/gen/crm/models/MetaCursors.ts","../src/gen/crm/models/NotFoundResponse.ts","../src/gen/crm/models/NotImplemented.ts","../src/gen/crm/models/Opportunity.ts","../src/gen/crm/models/PaymentRequired.ts","../src/gen/crm/models/SocialLink.ts","../src/gen/crm/models/Unauthorized.ts","../src/gen/crm/models/UnexpectedError.ts","../src/gen/crm/models/UnifiedId.ts","../src/gen/crm/models/Unprocessable.ts","../src/gen/crm/models/UpdateCompanyResponse.ts","../src/gen/crm/models/UpdateContactResponse.ts","../src/gen/crm/models/UpdateLeadResponse.ts","../src/gen/crm/models/UpdateOpportunityResponse.ts","../src/gen/crm/models/Website.ts","../src/gen/crm/apis/CompaniesApi.ts","../src/gen/crm/apis/ContactsApi.ts","../src/gen/crm/apis/LeadsApi.ts","../src/gen/crm/apis/OpportunitiesApi.ts","../src/Apideck.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/* tslint:disable */\n/* eslint-disable */\n\nimport fetch from 'node-fetch';\n\nexport const BASE_PATH = 'https://unify.apideck.com'.replace(/\\/+$/, '');\n\nconst isBlob = (value: any) =>\n  typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n  private middleware: Middleware[];\n\n  constructor(protected configuration: Configuration) {\n    this.middleware = [];\n  }\n\n  withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n    const next = this.clone<T>();\n    next.middleware = next.middleware.concat(...middlewares);\n    return next;\n  }\n\n  withPreMiddleware<T extends BaseAPI>(\n    this: T,\n    ...preMiddlewares: Array<Middleware['pre']>\n  ) {\n    const middlewares = preMiddlewares.map((pre) => ({ pre }));\n    return this.withMiddleware<T>(...middlewares);\n  }\n\n  withPostMiddleware<T extends BaseAPI>(\n    this: T,\n    ...postMiddlewares: Array<Middleware['post']>\n  ) {\n    const middlewares = postMiddlewares.map((post) => ({ post }));\n    return this.withMiddleware<T>(...middlewares);\n  }\n\n  protected async request(context: RequestOpts): Promise<Response> {\n    const { url, init } = this.createFetchParams(context);\n    const response = await this.fetchApi(url, init);\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    }\n    throw response;\n  }\n\n  private createFetchParams(context: RequestOpts) {\n    let url = this.configuration.basePath + context.path;\n\n    const body =\n      (typeof FormData !== 'undefined' && context.body instanceof FormData) ||\n      context.body instanceof URLSearchParams ||\n      isBlob(context.body)\n        ? context.body\n        : JSON.stringify(context.body);\n\n    const headers = Object.assign(\n      {},\n      this.configuration.headers,\n      context.headers\n    );\n    const init = {\n      method: context.method,\n      headers: headers,\n      body,\n    };\n    return { url, init };\n  }\n\n  private fetchApi = async (url: string, init: RequestInit) => {\n    let fetchParams = { url, init };\n    for (const middleware of this.middleware) {\n      if (middleware.pre) {\n        fetchParams =\n          (await middleware.pre({\n            fetch: this.fetchApi,\n            ...fetchParams,\n          })) || fetchParams;\n      }\n    }\n    let response = await this.configuration.fetchApi(\n      fetchParams.url,\n      fetchParams.init\n    );\n    for (const middleware of this.middleware) {\n      if (middleware.post) {\n        response =\n          (await middleware.post({\n            fetch: this.fetchApi,\n            url,\n            init,\n            response: response.clone(),\n          })) || response;\n      }\n    }\n    return response;\n  };\n\n  /**\n   * Create a shallow clone of `this` by constructing a new instance\n   * and then shallow cloning data members.\n   */\n  private clone<T extends BaseAPI>(this: T): T {\n    const constructor = this.constructor as any;\n    const next = new constructor(this.configuration);\n    next.middleware = this.middleware.slice();\n    return next;\n  }\n}\n\nexport class RequiredError extends Error {\n  name: 'RequiredError' = 'RequiredError';\n  constructor(public field: string, msg?: string) {\n    super(msg);\n  }\n}\n\nexport const COLLECTION_FORMATS = {\n  csv: ',',\n  ssv: ' ',\n  tsv: '\\t',\n  pipes: '|',\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface ConfigurationParameters {\n  basePath?: string; // override base path\n  middleware?: Middleware[]; // middleware to apply before/after fetch requests\n  apiKey?: string; // parameter for apiKey security\n  applicationId: string; //applicationId we want to use on every request\n  consumerId?: string; //consumerId we want to use on every request\n  headers?: HTTPHeaders; //header params we want to use on every request\n}\n\nexport class Configuration {\n  constructor(private configuration: ConfigurationParameters) {}\n\n  basePath: string =\n    this.configuration.basePath != null\n      ? this.configuration.basePath\n      : BASE_PATH;\n  fetchApi: FetchAPI = fetch as any;\n  middleware: Middleware[] = this.configuration.middleware || [];\n  applicationId: string = this.configuration.applicationId;\n  consumerId: string | undefined = this.configuration.consumerId;\n  headers: HTTPHeaders | undefined = this.configuration.headers;\n  apiKey: string | undefined = this.configuration.apiKey || undefined;\n}\n\nexport type Json = any;\nexport type HTTPMethod =\n  | 'GET'\n  | 'POST'\n  | 'PUT'\n  | 'PATCH'\n  | 'DELETE'\n  | 'OPTIONS'\n  | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = {\n  [key: string]:\n    | string\n    | number\n    | null\n    | boolean\n    | Array<string | number | null | boolean>\n    | HTTPQuery;\n};\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming =\n  | 'camelCase'\n  | 'snake_case'\n  | 'PascalCase'\n  | 'original';\n\nexport interface FetchParams {\n  url: string;\n  init: RequestInit;\n}\n\nexport interface RequestOpts {\n  path: string;\n  method: HTTPMethod;\n  headers: HTTPHeaders;\n  query?: HTTPQuery;\n  body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n  const value = json[key];\n  return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n  return Object.keys(params)\n    .map((key) => {\n      const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n      const value = params[key];\n      if (value instanceof Array) {\n        const multiValue = value\n          .map((singleValue) => encodeURIComponent(String(singleValue)))\n          .join(`&${encodeURIComponent(fullKey)}=`);\n        return `${encodeURIComponent(fullKey)}=${multiValue}`;\n      }\n      if (value instanceof Date) {\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(\n          value.toISOString()\n        )}`;\n      }\n      if (value instanceof Object) {\n        return querystring(value as HTTPQuery, fullKey);\n      }\n      return `${encodeURIComponent(fullKey)}=${encodeURIComponent(\n        String(value)\n      )}`;\n    })\n    .filter((part) => part.length > 0)\n    .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n  for (const consume of consumes) {\n    if ('multipart/form-data' === consume.contentType) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport interface Consume {\n  contentType: string;\n}\n\nexport interface RequestContext {\n  fetch: FetchAPI;\n  url: string;\n  init: RequestInit;\n}\n\nexport interface ResponseContext {\n  fetch: FetchAPI;\n  url: string;\n  init: RequestInit;\n  response: Response;\n}\n\nexport interface Middleware {\n  pre?(context: RequestContext): Promise<FetchParams | void>;\n  post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n  raw: Response;\n  value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n  (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n  constructor(\n    public raw: Response,\n    private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue\n  ) {}\n\n  async value(): Promise<T> {\n    return this.transformer(await this.raw.json());\n  }\n}\n\nexport class VoidApiResponse {\n  constructor(public raw: Response) {}\n\n  async value(): Promise<void> {\n    return undefined;\n  }\n}\n\nexport class BlobApiResponse {\n  constructor(public raw: Response) {}\n\n  async value(): Promise<Blob> {\n    return await this.raw.blob();\n  }\n}\n\nexport class TextApiResponse {\n  constructor(public raw: Response) {}\n\n  async value(): Promise<string> {\n    return await this.raw.text();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface Address\n */\nexport interface Address {\n  /**\n   *\n   * @type {string}\n   * @memberof Address\n   */\n  id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Address\n   */\n  type?: AddressType;\n  /**\n   *\n   * @type {string}\n   * @memberof Address\n   */\n  name?: string | null;\n  /**\n   * Line 1 of the address e.g. number, street, suite, apt #, etc.\n   * @type {string}\n   * @memberof Address\n   */\n  line1?: string | null;\n  /**\n   * Line 2 of the address\n   * @type {string}\n   * @memberof Address\n   */\n  line2?: string | null;\n  /**\n   * Name of city.\n   * @type {string}\n   * @memberof Address\n   */\n  city?: string | null;\n  /**\n   * Name of state\n   * @type {string}\n   * @memberof Address\n   */\n  state?: string | null;\n  /**\n   * Zip code or equivalent.\n   * @type {string}\n   * @memberof Address\n   */\n  postalCode?: string | null;\n  /**\n   * country code according to ISO 3166-1 alpha-2.\n   * @type {string}\n   * @memberof Address\n   */\n  country?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Address\n   */\n  latitude?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Address\n   */\n  longitude?: string | null;\n}\n\n/**\n * @export\n * @enum {string}\n */\nexport enum AddressType {\n  Default = 'default',\n  Primary = 'primary',\n  Secondary = 'secondary',\n  Tertiary = 'tertiary',\n  Invoicing = 'invoicing',\n  Delivery = 'delivery',\n  Visiting = 'visiting',\n  Mailing = 'mailing',\n  Home = 'home',\n  Work = 'work',\n  Other = 'other',\n}\n\nexport function AddressFromJSON(json: any): Address {\n  return AddressFromJSONTyped(json, false);\n}\n\nexport function AddressFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Address {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    type: !exists(json, 'type') ? undefined : json['type'],\n    name: !exists(json, 'name') ? undefined : json['name'],\n    line1: !exists(json, 'line1') ? undefined : json['line1'],\n    line2: !exists(json, 'line2') ? undefined : json['line2'],\n    city: !exists(json, 'city') ? undefined : json['city'],\n    state: !exists(json, 'state') ? undefined : json['state'],\n    postalCode: !exists(json, 'postal_code') ? undefined : json['postal_code'],\n    country: !exists(json, 'country') ? undefined : json['country'],\n    latitude: !exists(json, 'latitude') ? undefined : json['latitude'],\n    longitude: !exists(json, 'longitude') ? undefined : json['longitude'],\n  };\n}\n\nexport function AddressToJSON(value?: Address | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    id: value.id,\n    type: value.type,\n    name: value.name,\n    line1: value.line1,\n    line2: value.line2,\n    city: value.city,\n    state: value.state,\n    postal_code: value.postalCode,\n    country: value.country,\n    latitude: value.latitude,\n    longitude: value.longitude,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Address,\n  AddressFromJSON,\n  AddressFromJSONTyped,\n  AddressToJSON,\n  CustomField,\n  CustomFieldFromJSON,\n  CustomFieldFromJSONTyped,\n  CustomFieldToJSON,\n  Email,\n  EmailFromJSON,\n  EmailFromJSONTyped,\n  EmailToJSON,\n  PhoneNumber,\n  PhoneNumberFromJSON,\n  PhoneNumberFromJSONTyped,\n  PhoneNumberToJSON,\n  SocialLink,\n  SocialLinkFromJSON,\n  SocialLinkFromJSONTyped,\n  SocialLinkToJSON,\n  Website,\n  WebsiteFromJSON,\n  WebsiteFromJSONTyped,\n  WebsiteToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface Contact\n */\nexport interface Contact {\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  readonly id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  ownerId?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  companyId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  leadId?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  firstName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  middleName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  lastName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  prefix?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  suffix?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  title?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  department?: string | null;\n  /**\n   * language code according to ISO 639-1. For the United States - EN\n   * @type {string}\n   * @memberof Contact\n   */\n  language?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  gender?: ContactGender;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  birthday?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  image?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  leadSource?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  fax?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  description?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  status?: string;\n  /**\n   *\n   * @type {Array<Website>}\n   * @memberof Contact\n   */\n  websites?: Array<Website>;\n  /**\n   *\n   * @type {Array<Address>}\n   * @memberof Contact\n   */\n  addresses?: Array<Address>;\n  /**\n   *\n   * @type {Array<SocialLink>}\n   * @memberof Contact\n   */\n  socialLinks?: Array<SocialLink>;\n  /**\n   *\n   * @type {Array<PhoneNumber>}\n   * @memberof Contact\n   */\n  phoneNumbers?: Array<PhoneNumber>;\n  /**\n   *\n   * @type {Array<Email>}\n   * @memberof Contact\n   */\n  emails?: Array<Email>;\n  /**\n   *\n   * @type {Array<CustomField>}\n   * @memberof Contact\n   */\n  customFields?: Array<CustomField>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof Contact\n   */\n  tags?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  readonly updatedAt?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Contact\n   */\n  readonly createdAt?: string;\n}\n\n/**\n * @export\n * @enum {string}\n */\nexport enum ContactGender {\n  Male = 'male',\n  Female = 'female',\n  Unisex = 'unisex',\n}\n\nexport function ContactFromJSON(json: any): Contact {\n  return ContactFromJSONTyped(json, false);\n}\n\nexport function ContactFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Contact {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    ownerId: !exists(json, 'owner_id') ? undefined : json['owner_id'],\n    companyId: !exists(json, 'company_id') ? undefined : json['company_id'],\n    leadId: !exists(json, 'lead_id') ? undefined : json['lead_id'],\n    name: json['name'],\n    firstName: !exists(json, 'first_name') ? undefined : json['first_name'],\n    middleName: !exists(json, 'middle_name') ? undefined : json['middle_name'],\n    lastName: !exists(json, 'last_name') ? undefined : json['last_name'],\n    prefix: !exists(json, 'prefix') ? undefined : json['prefix'],\n    suffix: !exists(json, 'suffix') ? undefined : json['suffix'],\n    title: !exists(json, 'title') ? undefined : json['title'],\n    department: !exists(json, 'department') ? undefined : json['department'],\n    language: !exists(json, 'language') ? undefined : json['language'],\n    gender: !exists(json, 'gender') ? undefined : json['gender'],\n    birthday: !exists(json, 'birthday') ? undefined : json['birthday'],\n    image: !exists(json, 'image') ? undefined : json['image'],\n    leadSource: !exists(json, 'lead_source') ? undefined : json['lead_source'],\n    fax: !exists(json, 'fax') ? undefined : json['fax'],\n    description: !exists(json, 'description') ? undefined : json['description'],\n    status: !exists(json, 'status') ? undefined : json['status'],\n    websites: !exists(json, 'websites')\n      ? undefined\n      : (json['websites'] as Array<any>).map(WebsiteFromJSON),\n    addresses: !exists(json, 'addresses')\n      ? undefined\n      : (json['addresses'] as Array<any>).map(AddressFromJSON),\n    socialLinks: !exists(json, 'social_links')\n      ? undefined\n      : (json['social_links'] as Array<any>).map(SocialLinkFromJSON),\n    phoneNumbers: !exists(json, 'phone_numbers')\n      ? undefined\n      : (json['phone_numbers'] as Array<any>).map(PhoneNumberFromJSON),\n    emails: !exists(json, 'emails')\n      ? undefined\n      : (json['emails'] as Array<any>).map(EmailFromJSON),\n    customFields: !exists(json, 'custom_fields')\n      ? undefined\n      : (json['custom_fields'] as Array<any>).map(CustomFieldFromJSON),\n    tags: !exists(json, 'tags') ? undefined : json['tags'],\n    updatedAt: !exists(json, 'updated_at') ? undefined : json['updated_at'],\n    createdAt: !exists(json, 'created_at') ? undefined : json['created_at'],\n  };\n}\n\nexport function ContactToJSON(value?: Contact | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    owner_id: value.ownerId,\n    company_id: value.companyId,\n    lead_id: value.leadId,\n    name: value.name,\n    first_name: value.firstName,\n    middle_name: value.middleName,\n    last_name: value.lastName,\n    prefix: value.prefix,\n    suffix: value.suffix,\n    title: value.title,\n    department: value.department,\n    language: value.language,\n    gender: value.gender,\n    birthday: value.birthday,\n    image: value.image,\n    lead_source: value.leadSource,\n    fax: value.fax,\n    description: value.description,\n    status: value.status,\n    websites:\n      value.websites === undefined\n        ? undefined\n        : (value.websites as Array<any>).map(WebsiteToJSON),\n    addresses:\n      value.addresses === undefined\n        ? undefined\n        : (value.addresses as Array<any>).map(AddressToJSON),\n    social_links:\n      value.socialLinks === undefined\n        ? undefined\n        : (value.socialLinks as Array<any>).map(SocialLinkToJSON),\n    phone_numbers:\n      value.phoneNumbers === undefined\n        ? undefined\n        : (value.phoneNumbers as Array<any>).map(PhoneNumberToJSON),\n    emails:\n      value.emails === undefined\n        ? undefined\n        : (value.emails as Array<any>).map(EmailToJSON),\n    custom_fields:\n      value.customFields === undefined\n        ? undefined\n        : (value.customFields as Array<any>).map(CustomFieldToJSON),\n    tags: value.tags,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface PhoneNumber\n */\nexport interface PhoneNumber {\n  /**\n   *\n   * @type {string}\n   * @memberof PhoneNumber\n   */\n  id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PhoneNumber\n   */\n  number: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PhoneNumber\n   */\n  type?: PhoneNumberType;\n}\n\n/**\n * @export\n * @enum {string}\n */\nexport enum PhoneNumberType {\n  Default = 'default',\n  Phone = 'phone',\n  Mobile = 'mobile',\n  Work = 'work',\n  Office = 'office',\n  Home = 'home',\n  Fax = 'fax',\n  Assistant = 'assistant',\n  Other = 'other',\n}\n\nexport function PhoneNumberFromJSON(json: any): PhoneNumber {\n  return PhoneNumberFromJSONTyped(json, false);\n}\n\nexport function PhoneNumberFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): PhoneNumber {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    number: json['number'],\n    type: !exists(json, 'type') ? undefined : json['type'],\n  };\n}\n\nexport function PhoneNumberToJSON(value?: PhoneNumber | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    id: value.id,\n    number: value.number,\n    type: value.type,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface BadRequest\n */\nexport interface BadRequest {\n  /**\n   * HTTP status code\n   * @type {number}\n   * @memberof BadRequest\n   */\n  statusCode?: number;\n  /**\n   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n   * @type {string}\n   * @memberof BadRequest\n   */\n  error?: string;\n  /**\n   * The type of error returned\n   * @type {string}\n   * @memberof BadRequest\n   */\n  typeName?: string;\n  /**\n   * A human-readable message providing more details about the error.\n   * @type {string}\n   * @memberof BadRequest\n   */\n  message?: string;\n  /**\n   * Contains parameter or domain specific information related to the error and why it occured.\n   * @type {string | object}\n   * @memberof BadRequest\n   */\n  detail?: string | object;\n  /**\n   * Link to documentation of error type\n   * @type {string}\n   * @memberof BadRequest\n   */\n  ref?: string;\n}\n\nexport function BadRequestFromJSON(json: any): BadRequest {\n  return BadRequestFromJSONTyped(json, false);\n}\n\nexport function BadRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): BadRequest {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: !exists(json, 'status_code') ? undefined : json['status_code'],\n    error: !exists(json, 'error') ? undefined : json['error'],\n    typeName: !exists(json, 'typeName') ? undefined : json['typeName'],\n    message: !exists(json, 'message') ? undefined : json['message'],\n    detail: !exists(json, 'detail')\n      ? undefined\n      : <string | object>json['detail'],\n    ref: !exists(json, 'ref') ? undefined : json['ref'],\n  };\n}\n\nexport function BadRequestToJSON(value?: BadRequest | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    error: value.error,\n    typeName: value.typeName,\n    message: value.message,\n    detail: <string | object>value.detail,\n    ref: value.ref,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface BankAccount\n */\nexport interface BankAccount {\n  /**\n   *\n   * @type {string}\n   * @memberof BankAccount\n   */\n  iban?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof BankAccount\n   */\n  bic?: string | null;\n}\n\nexport function BankAccountFromJSON(json: any): BankAccount {\n  return BankAccountFromJSONTyped(json, false);\n}\n\nexport function BankAccountFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): BankAccount {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    iban: !exists(json, 'iban') ? undefined : json['iban'],\n    bic: !exists(json, 'bic') ? undefined : json['bic'],\n  };\n}\n\nexport function BankAccountToJSON(value?: BankAccount | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    iban: value.iban,\n    bic: value.bic,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Address,\n  AddressFromJSON,\n  AddressFromJSONTyped,\n  AddressToJSON,\n  BankAccount,\n  BankAccountFromJSON,\n  BankAccountFromJSONTyped,\n  BankAccountToJSON,\n  CustomField,\n  CustomFieldFromJSON,\n  CustomFieldFromJSONTyped,\n  CustomFieldToJSON,\n  Email,\n  EmailFromJSON,\n  EmailFromJSONTyped,\n  EmailToJSON,\n  PhoneNumber,\n  PhoneNumberFromJSON,\n  PhoneNumberFromJSONTyped,\n  PhoneNumberToJSON,\n  SocialLink,\n  SocialLinkFromJSON,\n  SocialLinkFromJSONTyped,\n  SocialLinkToJSON,\n  Website,\n  WebsiteFromJSON,\n  WebsiteFromJSONTyped,\n  WebsiteToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface Company\n */\nexport interface Company {\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  readonly id?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Company\n   */\n  readonly interactionCount?: number | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  ownerId?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  imageUrl?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  description?: string | null;\n  /**\n   * VAT number\n   * @type {string}\n   * @memberof Company\n   */\n  vatNumber?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  currency?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  fax?: string | null;\n  /**\n   *\n   * @type {Array<BankAccount>}\n   * @memberof Company\n   */\n  bankAccounts?: Array<BankAccount>;\n  /**\n   *\n   * @type {Array<Website>}\n   * @memberof Company\n   */\n  websites?: Array<Website>;\n  /**\n   *\n   * @type {Array<Address>}\n   * @memberof Company\n   */\n  addresses?: Array<Address>;\n  /**\n   *\n   * @type {Array<SocialLink>}\n   * @memberof Company\n   */\n  socialLinks?: Array<SocialLink>;\n  /**\n   *\n   * @type {Array<PhoneNumber>}\n   * @memberof Company\n   */\n  phoneNumbers?: Array<PhoneNumber>;\n  /**\n   *\n   * @type {Array<Email>}\n   * @memberof Company\n   */\n  emails?: Array<Email>;\n  /**\n   *\n   * @type {Array<CustomField>}\n   * @memberof Company\n   */\n  customFields?: Array<CustomField>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof Company\n   */\n  tags?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  readonly updatedBy?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  readonly createdBy?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  readonly updatedAt?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Company\n   */\n  readonly createdAt?: string;\n}\n\nexport function CompanyFromJSON(json: any): Company {\n  return CompanyFromJSONTyped(json, false);\n}\n\nexport function CompanyFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Company {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    interactionCount: !exists(json, 'interaction_count')\n      ? undefined\n      : json['interaction_count'],\n    name: json['name'],\n    ownerId: !exists(json, 'owner_id') ? undefined : json['owner_id'],\n    imageUrl: !exists(json, 'image_url') ? undefined : json['image_url'],\n    description: !exists(json, 'description') ? undefined : json['description'],\n    vatNumber: !exists(json, 'vat_number') ? undefined : json['vat_number'],\n    currency: !exists(json, 'currency') ? undefined : json['currency'],\n    fax: !exists(json, 'fax') ? undefined : json['fax'],\n    bankAccounts: !exists(json, 'bank_accounts')\n      ? undefined\n      : (json['bank_accounts'] as Array<any>).map(BankAccountFromJSON),\n    websites: !exists(json, 'websites')\n      ? undefined\n      : (json['websites'] as Array<any>).map(WebsiteFromJSON),\n    addresses: !exists(json, 'addresses')\n      ? undefined\n      : (json['addresses'] as Array<any>).map(AddressFromJSON),\n    socialLinks: !exists(json, 'social_links')\n      ? undefined\n      : (json['social_links'] as Array<any>).map(SocialLinkFromJSON),\n    phoneNumbers: !exists(json, 'phone_numbers')\n      ? undefined\n      : (json['phone_numbers'] as Array<any>).map(PhoneNumberFromJSON),\n    emails: !exists(json, 'emails')\n      ? undefined\n      : (json['emails'] as Array<any>).map(EmailFromJSON),\n    customFields: !exists(json, 'custom_fields')\n      ? undefined\n      : (json['custom_fields'] as Array<any>).map(CustomFieldFromJSON),\n    tags: !exists(json, 'tags') ? undefined : json['tags'],\n    updatedBy: !exists(json, 'updated_by') ? undefined : json['updated_by'],\n    createdBy: !exists(json, 'created_by') ? undefined : json['created_by'],\n    updatedAt: !exists(json, 'updated_at') ? undefined : json['updated_at'],\n    createdAt: !exists(json, 'created_at') ? undefined : json['created_at'],\n  };\n}\n\nexport function CompanyToJSON(value?: Company | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    name: value.name,\n    owner_id: value.ownerId,\n    image_url: value.imageUrl,\n    description: value.description,\n    vat_number: value.vatNumber,\n    currency: value.currency,\n    fax: value.fax,\n    bank_accounts:\n      value.bankAccounts === undefined\n        ? undefined\n        : (value.bankAccounts as Array<any>).map(BankAccountToJSON),\n    websites:\n      value.websites === undefined\n        ? undefined\n        : (value.websites as Array<any>).map(WebsiteToJSON),\n    addresses:\n      value.addresses === undefined\n        ? undefined\n        : (value.addresses as Array<any>).map(AddressToJSON),\n    social_links:\n      value.socialLinks === undefined\n        ? undefined\n        : (value.socialLinks as Array<any>).map(SocialLinkToJSON),\n    phone_numbers:\n      value.phoneNumbers === undefined\n        ? undefined\n        : (value.phoneNumbers as Array<any>).map(PhoneNumberToJSON),\n    emails:\n      value.emails === undefined\n        ? undefined\n        : (value.emails as Array<any>).map(EmailToJSON),\n    custom_fields:\n      value.customFields === undefined\n        ? undefined\n        : (value.customFields as Array<any>).map(CustomFieldToJSON),\n    tags: value.tags,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface CreateCompanyResponse\n */\nexport interface CreateCompanyResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof CreateCompanyResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof CreateCompanyResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof CreateCompanyResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof CreateCompanyResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof CreateCompanyResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof CreateCompanyResponse\n   */\n  data: UnifiedId;\n}\n\nexport function CreateCompanyResponseFromJSON(\n  json: any\n): CreateCompanyResponse {\n  return CreateCompanyResponseFromJSONTyped(json, false);\n}\n\nexport function CreateCompanyResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): CreateCompanyResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function CreateCompanyResponseToJSON(\n  value?: CreateCompanyResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface CreateContactResponse\n */\nexport interface CreateContactResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof CreateContactResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof CreateContactResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof CreateContactResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof CreateContactResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof CreateContactResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof CreateContactResponse\n   */\n  data: UnifiedId;\n}\n\nexport function CreateContactResponseFromJSON(\n  json: any\n): CreateContactResponse {\n  return CreateContactResponseFromJSONTyped(json, false);\n}\n\nexport function CreateContactResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): CreateContactResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function CreateContactResponseToJSON(\n  value?: CreateContactResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface CreateLeadResponse\n */\nexport interface CreateLeadResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof CreateLeadResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof CreateLeadResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof CreateLeadResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof CreateLeadResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof CreateLeadResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof CreateLeadResponse\n   */\n  data: UnifiedId;\n}\n\nexport function CreateLeadResponseFromJSON(json: any): CreateLeadResponse {\n  return CreateLeadResponseFromJSONTyped(json, false);\n}\n\nexport function CreateLeadResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): CreateLeadResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function CreateLeadResponseToJSON(\n  value?: CreateLeadResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface CreateOpportunityResponse\n */\nexport interface CreateOpportunityResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof CreateOpportunityResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof CreateOpportunityResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof CreateOpportunityResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof CreateOpportunityResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof CreateOpportunityResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof CreateOpportunityResponse\n   */\n  data: UnifiedId;\n}\n\nexport function CreateOpportunityResponseFromJSON(\n  json: any\n): CreateOpportunityResponse {\n  return CreateOpportunityResponseFromJSONTyped(json, false);\n}\n\nexport function CreateOpportunityResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): CreateOpportunityResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function CreateOpportunityResponseToJSON(\n  value?: CreateOpportunityResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface CustomField\n */\nexport interface CustomField {\n  /**\n   *\n   * @type {string}\n   * @memberof CustomField\n   */\n  id: string;\n  /**\n   *\n   * @type {string | number | boolean | Array<string>}\n   * @memberof CustomField\n   */\n  value?: string | number | boolean | Array<string>;\n}\n\nexport function CustomFieldFromJSON(json: any): CustomField {\n  return CustomFieldFromJSONTyped(json, false);\n}\n\nexport function CustomFieldFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): CustomField {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: json['id'],\n    value: !exists(json, 'value')\n      ? undefined\n      : <string | number | boolean | Array<string>>json['value'],\n  };\n}\n\nexport function CustomFieldToJSON(value?: CustomField | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    id: value.id,\n    value: <string | number | boolean | Array<string>>value.value,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface DeleteCompanyResponse\n */\nexport interface DeleteCompanyResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof DeleteCompanyResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof DeleteCompanyResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof DeleteCompanyResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof DeleteCompanyResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof DeleteCompanyResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof DeleteCompanyResponse\n   */\n  data: UnifiedId;\n}\n\nexport function DeleteCompanyResponseFromJSON(\n  json: any\n): DeleteCompanyResponse {\n  return DeleteCompanyResponseFromJSONTyped(json, false);\n}\n\nexport function DeleteCompanyResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): DeleteCompanyResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function DeleteCompanyResponseToJSON(\n  value?: DeleteCompanyResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface DeleteContactResponse\n */\nexport interface DeleteContactResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof DeleteContactResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof DeleteContactResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof DeleteContactResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof DeleteContactResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof DeleteContactResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof DeleteContactResponse\n   */\n  data: UnifiedId;\n}\n\nexport function DeleteContactResponseFromJSON(\n  json: any\n): DeleteContactResponse {\n  return DeleteContactResponseFromJSONTyped(json, false);\n}\n\nexport function DeleteContactResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): DeleteContactResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function DeleteContactResponseToJSON(\n  value?: DeleteContactResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface DeleteLeadResponse\n */\nexport interface DeleteLeadResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof DeleteLeadResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof DeleteLeadResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof DeleteLeadResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof DeleteLeadResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof DeleteLeadResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof DeleteLeadResponse\n   */\n  data: UnifiedId;\n}\n\nexport function DeleteLeadResponseFromJSON(json: any): DeleteLeadResponse {\n  return DeleteLeadResponseFromJSONTyped(json, false);\n}\n\nexport function DeleteLeadResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): DeleteLeadResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function DeleteLeadResponseToJSON(\n  value?: DeleteLeadResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface DeleteOpportunityResponse\n */\nexport interface DeleteOpportunityResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof DeleteOpportunityResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof DeleteOpportunityResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof DeleteOpportunityResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof DeleteOpportunityResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof DeleteOpportunityResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof DeleteOpportunityResponse\n   */\n  data: UnifiedId;\n}\n\nexport function DeleteOpportunityResponseFromJSON(\n  json: any\n): DeleteOpportunityResponse {\n  return DeleteOpportunityResponseFromJSONTyped(json, false);\n}\n\nexport function DeleteOpportunityResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): DeleteOpportunityResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function DeleteOpportunityResponseToJSON(\n  value?: DeleteOpportunityResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface Email\n */\nexport interface Email {\n  /**\n   *\n   * @type {string}\n   * @memberof Email\n   */\n  id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Email\n   */\n  email: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Email\n   */\n  type?: string;\n}\n\nexport function EmailFromJSON(json: any): Email {\n  return EmailFromJSONTyped(json, false);\n}\n\nexport function EmailFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Email {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    email: json['email'],\n    type: !exists(json, 'type') ? undefined : json['type'],\n  };\n}\n\nexport function EmailToJSON(value?: Email | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    id: value.id,\n    email: value.email,\n    type: value.type,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Company,\n  CompanyFromJSON,\n  CompanyFromJSONTyped,\n  CompanyToJSON,\n  Links,\n  LinksFromJSON,\n  LinksFromJSONTyped,\n  LinksToJSON,\n  Meta,\n  MetaFromJSON,\n  MetaFromJSONTyped,\n  MetaToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface GetCompaniesResponse\n */\nexport interface GetCompaniesResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetCompaniesResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetCompaniesResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetCompaniesResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetCompaniesResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetCompaniesResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Array<Company>}\n   * @memberof GetCompaniesResponse\n   */\n  data: Array<Company>;\n  /**\n   *\n   * @type {Meta}\n   * @memberof GetCompaniesResponse\n   */\n  meta?: Meta;\n  /**\n   *\n   * @type {Links}\n   * @memberof GetCompaniesResponse\n   */\n  links?: Links;\n}\n\nexport function GetCompaniesResponseFromJSON(json: any): GetCompaniesResponse {\n  return GetCompaniesResponseFromJSONTyped(json, false);\n}\n\nexport function GetCompaniesResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetCompaniesResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: (json['data'] as Array<any>).map(CompanyFromJSON),\n    meta: !exists(json, 'meta') ? undefined : MetaFromJSON(json['meta']),\n    links: !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),\n  };\n}\n\nexport function GetCompaniesResponseToJSON(\n  value?: GetCompaniesResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: (value.data as Array<any>).map(CompanyToJSON),\n    meta: MetaToJSON(value.meta),\n    links: LinksToJSON(value.links),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Company,\n  CompanyFromJSON,\n  CompanyFromJSONTyped,\n  CompanyToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface GetCompanyResponse\n */\nexport interface GetCompanyResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetCompanyResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetCompanyResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetCompanyResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetCompanyResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetCompanyResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Company}\n   * @memberof GetCompanyResponse\n   */\n  data: Company;\n}\n\nexport function GetCompanyResponseFromJSON(json: any): GetCompanyResponse {\n  return GetCompanyResponseFromJSONTyped(json, false);\n}\n\nexport function GetCompanyResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetCompanyResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: CompanyFromJSON(json['data']),\n  };\n}\n\nexport function GetCompanyResponseToJSON(\n  value?: GetCompanyResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: CompanyToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Contact,\n  ContactFromJSON,\n  ContactFromJSONTyped,\n  ContactToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface GetContactResponse\n */\nexport interface GetContactResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetContactResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetContactResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetContactResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetContactResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetContactResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Contact}\n   * @memberof GetContactResponse\n   */\n  data: Contact;\n}\n\nexport function GetContactResponseFromJSON(json: any): GetContactResponse {\n  return GetContactResponseFromJSONTyped(json, false);\n}\n\nexport function GetContactResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetContactResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: ContactFromJSON(json['data']),\n  };\n}\n\nexport function GetContactResponseToJSON(\n  value?: GetContactResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: ContactToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Contact,\n  ContactFromJSON,\n  ContactFromJSONTyped,\n  ContactToJSON,\n  Links,\n  LinksFromJSON,\n  LinksFromJSONTyped,\n  LinksToJSON,\n  Meta,\n  MetaFromJSON,\n  MetaFromJSONTyped,\n  MetaToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface GetContactsResponse\n */\nexport interface GetContactsResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetContactsResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetContactsResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetContactsResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetContactsResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetContactsResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Array<Contact>}\n   * @memberof GetContactsResponse\n   */\n  data: Array<Contact>;\n  /**\n   *\n   * @type {Meta}\n   * @memberof GetContactsResponse\n   */\n  meta?: Meta;\n  /**\n   *\n   * @type {Links}\n   * @memberof GetContactsResponse\n   */\n  links?: Links;\n}\n\nexport function GetContactsResponseFromJSON(json: any): GetContactsResponse {\n  return GetContactsResponseFromJSONTyped(json, false);\n}\n\nexport function GetContactsResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetContactsResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: (json['data'] as Array<any>).map(ContactFromJSON),\n    meta: !exists(json, 'meta') ? undefined : MetaFromJSON(json['meta']),\n    links: !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),\n  };\n}\n\nexport function GetContactsResponseToJSON(\n  value?: GetContactsResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: (value.data as Array<any>).map(ContactToJSON),\n    meta: MetaToJSON(value.meta),\n    links: LinksToJSON(value.links),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport { Lead, LeadFromJSON, LeadFromJSONTyped, LeadToJSON } from './';\n\n/**\n *\n * @export\n * @interface GetLeadResponse\n */\nexport interface GetLeadResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetLeadResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetLeadResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetLeadResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetLeadResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetLeadResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Lead}\n   * @memberof GetLeadResponse\n   */\n  data: Lead;\n}\n\nexport function GetLeadResponseFromJSON(json: any): GetLeadResponse {\n  return GetLeadResponseFromJSONTyped(json, false);\n}\n\nexport function GetLeadResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetLeadResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: LeadFromJSON(json['data']),\n  };\n}\n\nexport function GetLeadResponseToJSON(value?: GetLeadResponse | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: LeadToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Lead,\n  LeadFromJSON,\n  LeadFromJSONTyped,\n  LeadToJSON,\n  Links,\n  LinksFromJSON,\n  LinksFromJSONTyped,\n  LinksToJSON,\n  Meta,\n  MetaFromJSON,\n  MetaFromJSONTyped,\n  MetaToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface GetLeadsResponse\n */\nexport interface GetLeadsResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetLeadsResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetLeadsResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetLeadsResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetLeadsResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetLeadsResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Array<Lead>}\n   * @memberof GetLeadsResponse\n   */\n  data: Array<Lead>;\n  /**\n   *\n   * @type {Meta}\n   * @memberof GetLeadsResponse\n   */\n  meta?: Meta;\n  /**\n   *\n   * @type {Links}\n   * @memberof GetLeadsResponse\n   */\n  links?: Links;\n}\n\nexport function GetLeadsResponseFromJSON(json: any): GetLeadsResponse {\n  return GetLeadsResponseFromJSONTyped(json, false);\n}\n\nexport function GetLeadsResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetLeadsResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: (json['data'] as Array<any>).map(LeadFromJSON),\n    meta: !exists(json, 'meta') ? undefined : MetaFromJSON(json['meta']),\n    links: !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),\n  };\n}\n\nexport function GetLeadsResponseToJSON(value?: GetLeadsResponse | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: (value.data as Array<any>).map(LeadToJSON),\n    meta: MetaToJSON(value.meta),\n    links: LinksToJSON(value.links),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Links,\n  LinksFromJSON,\n  LinksFromJSONTyped,\n  LinksToJSON,\n  Meta,\n  MetaFromJSON,\n  MetaFromJSONTyped,\n  MetaToJSON,\n  Opportunity,\n  OpportunityFromJSON,\n  OpportunityFromJSONTyped,\n  OpportunityToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface GetOpportunitiesResponse\n */\nexport interface GetOpportunitiesResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetOpportunitiesResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetOpportunitiesResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetOpportunitiesResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetOpportunitiesResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetOpportunitiesResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Array<Opportunity>}\n   * @memberof GetOpportunitiesResponse\n   */\n  data: Array<Opportunity>;\n  /**\n   *\n   * @type {Meta}\n   * @memberof GetOpportunitiesResponse\n   */\n  meta?: Meta;\n  /**\n   *\n   * @type {Links}\n   * @memberof GetOpportunitiesResponse\n   */\n  links?: Links;\n}\n\nexport function GetOpportunitiesResponseFromJSON(\n  json: any\n): GetOpportunitiesResponse {\n  return GetOpportunitiesResponseFromJSONTyped(json, false);\n}\n\nexport function GetOpportunitiesResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetOpportunitiesResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: (json['data'] as Array<any>).map(OpportunityFromJSON),\n    meta: !exists(json, 'meta') ? undefined : MetaFromJSON(json['meta']),\n    links: !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),\n  };\n}\n\nexport function GetOpportunitiesResponseToJSON(\n  value?: GetOpportunitiesResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: (value.data as Array<any>).map(OpportunityToJSON),\n    meta: MetaToJSON(value.meta),\n    links: LinksToJSON(value.links),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Opportunity,\n  OpportunityFromJSON,\n  OpportunityFromJSONTyped,\n  OpportunityToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface GetOpportunityResponse\n */\nexport interface GetOpportunityResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof GetOpportunityResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof GetOpportunityResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof GetOpportunityResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof GetOpportunityResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof GetOpportunityResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {Opportunity}\n   * @memberof GetOpportunityResponse\n   */\n  data: Opportunity;\n}\n\nexport function GetOpportunityResponseFromJSON(\n  json: any\n): GetOpportunityResponse {\n  return GetOpportunityResponseFromJSONTyped(json, false);\n}\n\nexport function GetOpportunityResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): GetOpportunityResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: OpportunityFromJSON(json['data']),\n  };\n}\n\nexport function GetOpportunityResponseToJSON(\n  value?: GetOpportunityResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: OpportunityToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  Address,\n  AddressFromJSON,\n  AddressFromJSONTyped,\n  AddressToJSON,\n  CustomField,\n  CustomFieldFromJSON,\n  CustomFieldFromJSONTyped,\n  CustomFieldToJSON,\n  Email,\n  EmailFromJSON,\n  EmailFromJSONTyped,\n  EmailToJSON,\n  PhoneNumber,\n  PhoneNumberFromJSON,\n  PhoneNumberFromJSONTyped,\n  PhoneNumberToJSON,\n  SocialLink,\n  SocialLinkFromJSON,\n  SocialLinkFromJSONTyped,\n  SocialLinkToJSON,\n  Website,\n  WebsiteFromJSON,\n  WebsiteFromJSONTyped,\n  WebsiteToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface Lead\n */\nexport interface Lead {\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  readonly id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  ownerId?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  companyId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  companyName: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  firstName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  lastName?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  description?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  prefix?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  title?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  status?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  fax?: string | null;\n  /**\n   *\n   * @type {Array<Website>}\n   * @memberof Lead\n   */\n  websites?: Array<Website>;\n  /**\n   *\n   * @type {Array<Address>}\n   * @memberof Lead\n   */\n  addresses?: Array<Address>;\n  /**\n   *\n   * @type {Array<SocialLink>}\n   * @memberof Lead\n   */\n  socialLinks?: Array<SocialLink>;\n  /**\n   *\n   * @type {Array<PhoneNumber>}\n   * @memberof Lead\n   */\n  phoneNumbers?: Array<PhoneNumber>;\n  /**\n   *\n   * @type {Array<Email>}\n   * @memberof Lead\n   */\n  emails?: Array<Email>;\n  /**\n   *\n   * @type {Array<CustomField>}\n   * @memberof Lead\n   */\n  customFields?: Array<CustomField>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof Lead\n   */\n  tags?: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  readonly updatedAt?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Lead\n   */\n  readonly createdAt?: string;\n}\n\nexport function LeadFromJSON(json: any): Lead {\n  return LeadFromJSONTyped(json, false);\n}\n\nexport function LeadFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Lead {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    ownerId: !exists(json, 'owner_id') ? undefined : json['owner_id'],\n    companyId: !exists(json, 'company_id') ? undefined : json['company_id'],\n    companyName: json['company_name'],\n    name: json['name'],\n    firstName: !exists(json, 'first_name') ? undefined : json['first_name'],\n    lastName: !exists(json, 'last_name') ? undefined : json['last_name'],\n    description: !exists(json, 'description') ? undefined : json['description'],\n    prefix: !exists(json, 'prefix') ? undefined : json['prefix'],\n    title: !exists(json, 'title') ? undefined : json['title'],\n    status: !exists(json, 'status') ? undefined : json['status'],\n    fax: !exists(json, 'fax') ? undefined : json['fax'],\n    websites: !exists(json, 'websites')\n      ? undefined\n      : (json['websites'] as Array<any>).map(WebsiteFromJSON),\n    addresses: !exists(json, 'addresses')\n      ? undefined\n      : (json['addresses'] as Array<any>).map(AddressFromJSON),\n    socialLinks: !exists(json, 'social_links')\n      ? undefined\n      : (json['social_links'] as Array<any>).map(SocialLinkFromJSON),\n    phoneNumbers: !exists(json, 'phone_numbers')\n      ? undefined\n      : (json['phone_numbers'] as Array<any>).map(PhoneNumberFromJSON),\n    emails: !exists(json, 'emails')\n      ? undefined\n      : (json['emails'] as Array<any>).map(EmailFromJSON),\n    customFields: !exists(json, 'custom_fields')\n      ? undefined\n      : (json['custom_fields'] as Array<any>).map(CustomFieldFromJSON),\n    tags: !exists(json, 'tags') ? undefined : json['tags'],\n    updatedAt: !exists(json, 'updated_at') ? undefined : json['updated_at'],\n    createdAt: !exists(json, 'created_at') ? undefined : json['created_at'],\n  };\n}\n\nexport function LeadToJSON(value?: Lead | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    owner_id: value.ownerId,\n    company_id: value.companyId,\n    company_name: value.companyName,\n    name: value.name,\n    first_name: value.firstName,\n    last_name: value.lastName,\n    description: value.description,\n    prefix: value.prefix,\n    title: value.title,\n    status: value.status,\n    fax: value.fax,\n    websites:\n      value.websites === undefined\n        ? undefined\n        : (value.websites as Array<any>).map(WebsiteToJSON),\n    addresses:\n      value.addresses === undefined\n        ? undefined\n        : (value.addresses as Array<any>).map(AddressToJSON),\n    social_links:\n      value.socialLinks === undefined\n        ? undefined\n        : (value.socialLinks as Array<any>).map(SocialLinkToJSON),\n    phone_numbers:\n      value.phoneNumbers === undefined\n        ? undefined\n        : (value.phoneNumbers as Array<any>).map(PhoneNumberToJSON),\n    emails:\n      value.emails === undefined\n        ? undefined\n        : (value.emails as Array<any>).map(EmailToJSON),\n    custom_fields:\n      value.customFields === undefined\n        ? undefined\n        : (value.customFields as Array<any>).map(CustomFieldToJSON),\n    tags: value.tags,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n * Links to navigate to previous or next pages through the API\n * @export\n * @interface Links\n */\nexport interface Links {\n  /**\n   * Link to navigate to the previous page through the API\n   * @type {string}\n   * @memberof Links\n   */\n  previous?: string | null;\n  /**\n   * Link to navigate to the current page through the API\n   * @type {string}\n   * @memberof Links\n   */\n  current?: string;\n  /**\n   * Link to navigate to the previous page through the API\n   * @type {string}\n   * @memberof Links\n   */\n  next?: string | null;\n}\n\nexport function LinksFromJSON(json: any): Links {\n  return LinksFromJSONTyped(json, false);\n}\n\nexport function LinksFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Links {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    previous: !exists(json, 'previous') ? undefined : json['previous'],\n    current: !exists(json, 'current') ? undefined : json['current'],\n    next: !exists(json, 'next') ? undefined : json['next'],\n  };\n}\n\nexport function LinksToJSON(value?: Links | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    previous: value.previous,\n    current: value.current,\n    next: value.next,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  MetaCursors,\n  MetaCursorsFromJSON,\n  MetaCursorsFromJSONTyped,\n  MetaCursorsToJSON,\n} from './';\n\n/**\n * Reponse metadata\n * @export\n * @interface Meta\n */\nexport interface Meta {\n  /**\n   * Number of items returned in the data property of the response\n   * @type {number}\n   * @memberof Meta\n   */\n  itemsOnPage?: number;\n  /**\n   *\n   * @type {MetaCursors}\n   * @memberof Meta\n   */\n  cursors?: MetaCursors;\n}\n\nexport function MetaFromJSON(json: any): Meta {\n  return MetaFromJSONTyped(json, false);\n}\n\nexport function MetaFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Meta {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    itemsOnPage: !exists(json, 'items_on_page')\n      ? undefined\n      : json['items_on_page'],\n    cursors: !exists(json, 'cursors')\n      ? undefined\n      : MetaCursorsFromJSON(json['cursors']),\n  };\n}\n\nexport function MetaToJSON(value?: Meta | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    items_on_page: value.itemsOnPage,\n    cursors: MetaCursorsToJSON(value.cursors),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n * Cursors to navigate to previous or next pages through the API\n * @export\n * @interface MetaCursors\n */\nexport interface MetaCursors {\n  /**\n   * Cursor to navigate to the previous page of results through the API\n   * @type {string}\n   * @memberof MetaCursors\n   */\n  previous?: string | null;\n  /**\n   * Cursor to navigate to the current page of results through the API\n   * @type {string}\n   * @memberof MetaCursors\n   */\n  current?: string | null;\n  /**\n   * Cursor to navigate to the next page of results through the API\n   * @type {string}\n   * @memberof MetaCursors\n   */\n  next?: string | null;\n}\n\nexport function MetaCursorsFromJSON(json: any): MetaCursors {\n  return MetaCursorsFromJSONTyped(json, false);\n}\n\nexport function MetaCursorsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): MetaCursors {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    previous: !exists(json, 'previous') ? undefined : json['previous'],\n    current: !exists(json, 'current') ? undefined : json['current'],\n    next: !exists(json, 'next') ? undefined : json['next'],\n  };\n}\n\nexport function MetaCursorsToJSON(value?: MetaCursors | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    previous: value.previous,\n    current: value.current,\n    next: value.next,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface NotFoundResponse\n */\nexport interface NotFoundResponse {\n  /**\n   * HTTP status code\n   * @type {number}\n   * @memberof NotFoundResponse\n   */\n  statusCode?: number;\n  /**\n   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n   * @type {string}\n   * @memberof NotFoundResponse\n   */\n  error?: string;\n  /**\n   * The type of error returned\n   * @type {string}\n   * @memberof NotFoundResponse\n   */\n  typeName?: string;\n  /**\n   * A human-readable message providing more details about the error.\n   * @type {string}\n   * @memberof NotFoundResponse\n   */\n  message?: string;\n  /**\n   * Contains parameter or domain specific information related to the error and why it occured.\n   * @type {string}\n   * @memberof NotFoundResponse\n   */\n  detail?: string;\n  /**\n   * Link to documentation of error type\n   * @type {string}\n   * @memberof NotFoundResponse\n   */\n  ref?: string;\n}\n\nexport function NotFoundResponseFromJSON(json: any): NotFoundResponse {\n  return NotFoundResponseFromJSONTyped(json, false);\n}\n\nexport function NotFoundResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): NotFoundResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: !exists(json, 'status_code') ? undefined : json['status_code'],\n    error: !exists(json, 'error') ? undefined : json['error'],\n    typeName: !exists(json, 'typeName') ? undefined : json['typeName'],\n    message: !exists(json, 'message') ? undefined : json['message'],\n    detail: !exists(json, 'detail') ? undefined : json['detail'],\n    ref: !exists(json, 'ref') ? undefined : json['ref'],\n  };\n}\n\nexport function NotFoundResponseToJSON(value?: NotFoundResponse | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    error: value.error,\n    typeName: value.typeName,\n    message: value.message,\n    detail: value.detail,\n    ref: value.ref,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface NotImplemented\n */\nexport interface NotImplemented {\n  /**\n   * HTTP status code\n   * @type {number}\n   * @memberof NotImplemented\n   */\n  statusCode?: number;\n  /**\n   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n   * @type {string}\n   * @memberof NotImplemented\n   */\n  error?: string;\n  /**\n   * The type of error returned\n   * @type {string}\n   * @memberof NotImplemented\n   */\n  typeName?: string;\n  /**\n   * A human-readable message providing more details about the error.\n   * @type {string}\n   * @memberof NotImplemented\n   */\n  message?: string;\n  /**\n   * Contains parameter or domain specific information related to the error and why it occured.\n   * @type {string | object}\n   * @memberof NotImplemented\n   */\n  detail?: string | object;\n  /**\n   * Link to documentation of error type\n   * @type {string}\n   * @memberof NotImplemented\n   */\n  ref?: string;\n}\n\nexport function NotImplementedFromJSON(json: any): NotImplemented {\n  return NotImplementedFromJSONTyped(json, false);\n}\n\nexport function NotImplementedFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): NotImplemented {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: !exists(json, 'status_code') ? undefined : json['status_code'],\n    error: !exists(json, 'error') ? undefined : json['error'],\n    typeName: !exists(json, 'typeName') ? undefined : json['typeName'],\n    message: !exists(json, 'message') ? undefined : json['message'],\n    detail: !exists(json, 'detail')\n      ? undefined\n      : <string | object>json['detail'],\n    ref: !exists(json, 'ref') ? undefined : json['ref'],\n  };\n}\n\nexport function NotImplementedToJSON(value?: NotImplemented | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    error: value.error,\n    typeName: value.typeName,\n    message: value.message,\n    detail: <string | object>value.detail,\n    ref: value.ref,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  CustomField,\n  CustomFieldFromJSON,\n  CustomFieldFromJSONTyped,\n  CustomFieldToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface Opportunity\n */\nexport interface Opportunity {\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  readonly id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  title: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  description?: string | null;\n  /**\n   *\n   * @type {number}\n   * @memberof Opportunity\n   */\n  monetaryAmount?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  currency?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Opportunity\n   */\n  winProbability?: number | null;\n  /**\n   *\n   * @type {Date}\n   * @memberof Opportunity\n   */\n  closeDate?: Date | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  lossReasonId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  pipelineId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  pipelineStageId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  sourceId?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  primaryContactId: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  leadId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  contactId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  companyId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  companyName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  ownerId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  priority?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  status?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  statusId?: string | null;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof Opportunity\n   */\n  tags?: Array<string>;\n  /**\n   *\n   * @type {number}\n   * @memberof Opportunity\n   */\n  readonly interactionCount?: number;\n  /**\n   *\n   * @type {Array<CustomField>}\n   * @memberof Opportunity\n   */\n  customFields?: Array<CustomField>;\n  /**\n   *\n   * @type {Date}\n   * @memberof Opportunity\n   */\n  readonly dateStageChanged?: Date | null;\n  /**\n   *\n   * @type {Date}\n   * @memberof Opportunity\n   */\n  readonly dateLastContacted?: Date | null;\n  /**\n   *\n   * @type {Date}\n   * @memberof Opportunity\n   */\n  readonly dateLeadCreated?: Date | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  readonly updatedBy?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof Opportunity\n   */\n  readonly createdBy?: string | null;\n  /**\n   *\n   * @type {Date}\n   * @memberof Opportunity\n   */\n  readonly updatedAt?: Date;\n  /**\n   *\n   * @type {Date}\n   * @memberof Opportunity\n   */\n  readonly createdAt?: Date;\n}\n\nexport function OpportunityFromJSON(json: any): Opportunity {\n  return OpportunityFromJSONTyped(json, false);\n}\n\nexport function OpportunityFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Opportunity {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    title: json['title'],\n    description: !exists(json, 'description') ? undefined : json['description'],\n    monetaryAmount: !exists(json, 'monetary_amount')\n      ? undefined\n      : json['monetary_amount'],\n    currency: !exists(json, 'currency') ? undefined : json['currency'],\n    winProbability: !exists(json, 'win_probability')\n      ? undefined\n      : json['win_probability'],\n    closeDate: !exists(json, 'close_date')\n      ? undefined\n      : json['close_date'] === null\n      ? null\n      : new Date(json['close_date']),\n    lossReasonId: !exists(json, 'loss_reason_id')\n      ? undefined\n      : json['loss_reason_id'],\n    pipelineId: !exists(json, 'pipeline_id') ? undefined : json['pipeline_id'],\n    pipelineStageId: !exists(json, 'pipeline_stage_id')\n      ? undefined\n      : json['pipeline_stage_id'],\n    sourceId: !exists(json, 'source_id') ? undefined : json['source_id'],\n    primaryContactId: json['primary_contact_id'],\n    leadId: !exists(json, 'lead_id') ? undefined : json['lead_id'],\n    contactId: !exists(json, 'contact_id') ? undefined : json['contact_id'],\n    companyId: !exists(json, 'company_id') ? undefined : json['company_id'],\n    companyName: !exists(json, 'company_name')\n      ? undefined\n      : json['company_name'],\n    ownerId: !exists(json, 'owner_id') ? undefined : json['owner_id'],\n    priority: !exists(json, 'priority') ? undefined : json['priority'],\n    status: !exists(json, 'status') ? undefined : json['status'],\n    statusId: !exists(json, 'status_id') ? undefined : json['status_id'],\n    tags: !exists(json, 'tags') ? undefined : json['tags'],\n    interactionCount: !exists(json, 'interaction_count')\n      ? undefined\n      : json['interaction_count'],\n    customFields: !exists(json, 'custom_fields')\n      ? undefined\n      : (json['custom_fields'] as Array<any>).map(CustomFieldFromJSON),\n    dateStageChanged: !exists(json, 'date_stage_changed')\n      ? undefined\n      : json['date_stage_changed'] === null\n      ? null\n      : new Date(json['date_stage_changed']),\n    dateLastContacted: !exists(json, 'date_last_contacted')\n      ? undefined\n      : json['date_last_contacted'] === null\n      ? null\n      : new Date(json['date_last_contacted']),\n    dateLeadCreated: !exists(json, 'date_lead_created')\n      ? undefined\n      : json['date_lead_created'] === null\n      ? null\n      : new Date(json['date_lead_created']),\n    updatedBy: !exists(json, 'updated_by') ? undefined : json['updated_by'],\n    createdBy: !exists(json, 'created_by') ? undefined : json['created_by'],\n    updatedAt: !exists(json, 'updated_at')\n      ? undefined\n      : new Date(json['updated_at']),\n    createdAt: !exists(json, 'created_at')\n      ? undefined\n      : new Date(json['created_at']),\n  };\n}\n\nexport function OpportunityToJSON(value?: Opportunity | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    title: value.title,\n    description: value.description,\n    monetary_amount: value.monetaryAmount,\n    currency: value.currency,\n    win_probability: value.winProbability,\n    close_date:\n      value.closeDate === undefined\n        ? undefined\n        : value.closeDate === null\n        ? null\n        : value.closeDate.toISOString().substr(0, 10),\n    loss_reason_id: value.lossReasonId,\n    pipeline_id: value.pipelineId,\n    pipeline_stage_id: value.pipelineStageId,\n    source_id: value.sourceId,\n    primary_contact_id: value.primaryContactId,\n    lead_id: value.leadId,\n    contact_id: value.contactId,\n    company_id: value.companyId,\n    company_name: value.companyName,\n    owner_id: value.ownerId,\n    priority: value.priority,\n    status: value.status,\n    status_id: value.statusId,\n    tags: value.tags,\n    custom_fields:\n      value.customFields === undefined\n        ? undefined\n        : (value.customFields as Array<any>).map(CustomFieldToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface PaymentRequired\n */\nexport interface PaymentRequired {\n  /**\n   * HTTP status code\n   * @type {number}\n   * @memberof PaymentRequired\n   */\n  statusCode?: number;\n  /**\n   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n   * @type {string}\n   * @memberof PaymentRequired\n   */\n  error?: string;\n  /**\n   * The type of error returned\n   * @type {string}\n   * @memberof PaymentRequired\n   */\n  typeName?: string;\n  /**\n   * A human-readable message providing more details about the error.\n   * @type {string}\n   * @memberof PaymentRequired\n   */\n  message?: string;\n  /**\n   * Contains parameter or domain specific information related to the error and why it occured.\n   * @type {string}\n   * @memberof PaymentRequired\n   */\n  detail?: string;\n  /**\n   * Link to documentation of error type\n   * @type {string}\n   * @memberof PaymentRequired\n   */\n  ref?: string;\n}\n\nexport function PaymentRequiredFromJSON(json: any): PaymentRequired {\n  return PaymentRequiredFromJSONTyped(json, false);\n}\n\nexport function PaymentRequiredFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): PaymentRequired {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: !exists(json, 'status_code') ? undefined : json['status_code'],\n    error: !exists(json, 'error') ? undefined : json['error'],\n    typeName: !exists(json, 'typeName') ? undefined : json['typeName'],\n    message: !exists(json, 'message') ? undefined : json['message'],\n    detail: !exists(json, 'detail') ? undefined : json['detail'],\n    ref: !exists(json, 'ref') ? undefined : json['ref'],\n  };\n}\n\nexport function PaymentRequiredToJSON(value?: PaymentRequired | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    error: value.error,\n    typeName: value.typeName,\n    message: value.message,\n    detail: value.detail,\n    ref: value.ref,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface SocialLink\n */\nexport interface SocialLink {\n  /**\n   *\n   * @type {string}\n   * @memberof SocialLink\n   */\n  id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SocialLink\n   */\n  url: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SocialLink\n   */\n  platform?: string;\n}\n\nexport function SocialLinkFromJSON(json: any): SocialLink {\n  return SocialLinkFromJSONTyped(json, false);\n}\n\nexport function SocialLinkFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): SocialLink {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    url: json['url'],\n    platform: !exists(json, 'platform') ? undefined : json['platform'],\n  };\n}\n\nexport function SocialLinkToJSON(value?: SocialLink | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    id: value.id,\n    url: value.url,\n    platform: value.platform,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface Unauthorized\n */\nexport interface Unauthorized {\n  /**\n   * HTTP status code\n   * @type {number}\n   * @memberof Unauthorized\n   */\n  statusCode?: number;\n  /**\n   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n   * @type {string}\n   * @memberof Unauthorized\n   */\n  error?: string;\n  /**\n   * The type of error returned\n   * @type {string}\n   * @memberof Unauthorized\n   */\n  typeName?: string;\n  /**\n   * A human-readable message providing more details about the error.\n   * @type {string}\n   * @memberof Unauthorized\n   */\n  message?: string;\n  /**\n   * Contains parameter or domain specific information related to the error and why it occured.\n   * @type {string | object}\n   * @memberof Unauthorized\n   */\n  detail?: string | object;\n  /**\n   * Link to documentation of error type\n   * @type {string}\n   * @memberof Unauthorized\n   */\n  ref?: string;\n}\n\nexport function UnauthorizedFromJSON(json: any): Unauthorized {\n  return UnauthorizedFromJSONTyped(json, false);\n}\n\nexport function UnauthorizedFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Unauthorized {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: !exists(json, 'status_code') ? undefined : json['status_code'],\n    error: !exists(json, 'error') ? undefined : json['error'],\n    typeName: !exists(json, 'typeName') ? undefined : json['typeName'],\n    message: !exists(json, 'message') ? undefined : json['message'],\n    detail: !exists(json, 'detail')\n      ? undefined\n      : <string | object>json['detail'],\n    ref: !exists(json, 'ref') ? undefined : json['ref'],\n  };\n}\n\nexport function UnauthorizedToJSON(value?: Unauthorized | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    error: value.error,\n    typeName: value.typeName,\n    message: value.message,\n    detail: <string | object>value.detail,\n    ref: value.ref,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface UnexpectedError\n */\nexport interface UnexpectedError {\n  /**\n   * HTTP status code\n   * @type {number}\n   * @memberof UnexpectedError\n   */\n  statusCode?: number;\n  /**\n   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n   * @type {string}\n   * @memberof UnexpectedError\n   */\n  error?: string;\n  /**\n   * The type of error returned\n   * @type {string}\n   * @memberof UnexpectedError\n   */\n  typeName?: string;\n  /**\n   * A human-readable message providing more details about the error.\n   * @type {string}\n   * @memberof UnexpectedError\n   */\n  message?: string;\n  /**\n   * Contains parameter or domain specific information related to the error and why it occured.\n   * @type {string | object}\n   * @memberof UnexpectedError\n   */\n  detail?: string | object;\n  /**\n   * Link to documentation of error type\n   * @type {string}\n   * @memberof UnexpectedError\n   */\n  ref?: string;\n}\n\nexport function UnexpectedErrorFromJSON(json: any): UnexpectedError {\n  return UnexpectedErrorFromJSONTyped(json, false);\n}\n\nexport function UnexpectedErrorFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): UnexpectedError {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: !exists(json, 'status_code') ? undefined : json['status_code'],\n    error: !exists(json, 'error') ? undefined : json['error'],\n    typeName: !exists(json, 'typeName') ? undefined : json['typeName'],\n    message: !exists(json, 'message') ? undefined : json['message'],\n    detail: !exists(json, 'detail')\n      ? undefined\n      : <string | object>json['detail'],\n    ref: !exists(json, 'ref') ? undefined : json['ref'],\n  };\n}\n\nexport function UnexpectedErrorToJSON(value?: UnexpectedError | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    error: value.error,\n    typeName: value.typeName,\n    message: value.message,\n    detail: <string | object>value.detail,\n    ref: value.ref,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface UnifiedId\n */\nexport interface UnifiedId {\n  /**\n   *\n   * @type {string}\n   * @memberof UnifiedId\n   */\n  readonly id: string;\n}\n\nexport function UnifiedIdFromJSON(json: any): UnifiedId {\n  return UnifiedIdFromJSONTyped(json, false);\n}\n\nexport function UnifiedIdFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): UnifiedId {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: json['id'],\n  };\n}\n\nexport function UnifiedIdToJSON(value?: UnifiedId | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {};\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface Unprocessable\n */\nexport interface Unprocessable {\n  /**\n   * HTTP status code\n   * @type {number}\n   * @memberof Unprocessable\n   */\n  statusCode?: number;\n  /**\n   * Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n   * @type {string}\n   * @memberof Unprocessable\n   */\n  error?: string;\n  /**\n   * The type of error returned\n   * @type {string}\n   * @memberof Unprocessable\n   */\n  typeName?: string;\n  /**\n   * A human-readable message providing more details about the error.\n   * @type {string}\n   * @memberof Unprocessable\n   */\n  message?: string;\n  /**\n   * Contains parameter or domain specific information related to the error and why it occured.\n   * @type {string}\n   * @memberof Unprocessable\n   */\n  detail?: string;\n  /**\n   * Link to documentation of error type\n   * @type {string}\n   * @memberof Unprocessable\n   */\n  ref?: string;\n}\n\nexport function UnprocessableFromJSON(json: any): Unprocessable {\n  return UnprocessableFromJSONTyped(json, false);\n}\n\nexport function UnprocessableFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Unprocessable {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: !exists(json, 'status_code') ? undefined : json['status_code'],\n    error: !exists(json, 'error') ? undefined : json['error'],\n    typeName: !exists(json, 'typeName') ? undefined : json['typeName'],\n    message: !exists(json, 'message') ? undefined : json['message'],\n    detail: !exists(json, 'detail') ? undefined : json['detail'],\n    ref: !exists(json, 'ref') ? undefined : json['ref'],\n  };\n}\n\nexport function UnprocessableToJSON(value?: Unprocessable | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    error: value.error,\n    typeName: value.typeName,\n    message: value.message,\n    detail: value.detail,\n    ref: value.ref,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface UpdateCompanyResponse\n */\nexport interface UpdateCompanyResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof UpdateCompanyResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof UpdateCompanyResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof UpdateCompanyResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof UpdateCompanyResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof UpdateCompanyResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof UpdateCompanyResponse\n   */\n  data: UnifiedId;\n}\n\nexport function UpdateCompanyResponseFromJSON(\n  json: any\n): UpdateCompanyResponse {\n  return UpdateCompanyResponseFromJSONTyped(json, false);\n}\n\nexport function UpdateCompanyResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): UpdateCompanyResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function UpdateCompanyResponseToJSON(\n  value?: UpdateCompanyResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface UpdateContactResponse\n */\nexport interface UpdateContactResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof UpdateContactResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof UpdateContactResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof UpdateContactResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof UpdateContactResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof UpdateContactResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof UpdateContactResponse\n   */\n  data: UnifiedId;\n}\n\nexport function UpdateContactResponseFromJSON(\n  json: any\n): UpdateContactResponse {\n  return UpdateContactResponseFromJSONTyped(json, false);\n}\n\nexport function UpdateContactResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): UpdateContactResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function UpdateContactResponseToJSON(\n  value?: UpdateContactResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface UpdateLeadResponse\n */\nexport interface UpdateLeadResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof UpdateLeadResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof UpdateLeadResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof UpdateLeadResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof UpdateLeadResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof UpdateLeadResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof UpdateLeadResponse\n   */\n  data: UnifiedId;\n}\n\nexport function UpdateLeadResponseFromJSON(json: any): UpdateLeadResponse {\n  return UpdateLeadResponseFromJSONTyped(json, false);\n}\n\nexport function UpdateLeadResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): UpdateLeadResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function UpdateLeadResponseToJSON(\n  value?: UpdateLeadResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\nimport {\n  UnifiedId,\n  UnifiedIdFromJSON,\n  UnifiedIdFromJSONTyped,\n  UnifiedIdToJSON,\n} from './';\n\n/**\n *\n * @export\n * @interface UpdateOpportunityResponse\n */\nexport interface UpdateOpportunityResponse {\n  /**\n   * HTTP Response Status Code\n   * @type {number}\n   * @memberof UpdateOpportunityResponse\n   */\n  statusCode: number;\n  /**\n   * HTTP Response Status\n   * @type {string}\n   * @memberof UpdateOpportunityResponse\n   */\n  status: string;\n  /**\n   * Apideck ID of service provider\n   * @type {string}\n   * @memberof UpdateOpportunityResponse\n   */\n  service: string;\n  /**\n   * Unified API resource name\n   * @type {string}\n   * @memberof UpdateOpportunityResponse\n   */\n  resource: string;\n  /**\n   * Operation performed\n   * @type {string}\n   * @memberof UpdateOpportunityResponse\n   */\n  operation: string;\n  /**\n   *\n   * @type {UnifiedId}\n   * @memberof UpdateOpportunityResponse\n   */\n  data: UnifiedId;\n}\n\nexport function UpdateOpportunityResponseFromJSON(\n  json: any\n): UpdateOpportunityResponse {\n  return UpdateOpportunityResponseFromJSONTyped(json, false);\n}\n\nexport function UpdateOpportunityResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): UpdateOpportunityResponse {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    statusCode: json['status_code'],\n    status: json['status'],\n    service: json['service'],\n    resource: json['resource'],\n    operation: json['operation'],\n    data: UnifiedIdFromJSON(json['data']),\n  };\n}\n\nexport function UpdateOpportunityResponseToJSON(\n  value?: UpdateOpportunityResponse | null\n): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    status_code: value.statusCode,\n    status: value.status,\n    service: value.service,\n    resource: value.resource,\n    operation: value.operation,\n    data: UnifiedIdToJSON(value.data),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { exists, mapValues } from '../runtime';\n/**\n *\n * @export\n * @interface Website\n */\nexport interface Website {\n  /**\n   *\n   * @type {string}\n   * @memberof Website\n   */\n  id?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Website\n   */\n  url: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Website\n   */\n  category?: string;\n}\n\nexport function WebsiteFromJSON(json: any): Website {\n  return WebsiteFromJSONTyped(json, false);\n}\n\nexport function WebsiteFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean\n): Website {\n  if (json === undefined || json === null) {\n    return json;\n  }\n  return {\n    id: !exists(json, 'id') ? undefined : json['id'],\n    url: json['url'],\n    category: !exists(json, 'category') ? undefined : json['category'],\n  };\n}\n\nexport function WebsiteToJSON(value?: Website | null): any {\n  if (value === undefined) {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  return {\n    id: value.id,\n    url: value.url,\n    category: value.category,\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n\nimport * as runtime from '../runtime';\nimport {\n  BadRequest,\n  BadRequestFromJSON,\n  BadRequestToJSON,\n  Company,\n  CompanyFromJSON,\n  CompanyToJSON,\n  CreateCompanyResponse,\n  CreateCompanyResponseFromJSON,\n  CreateCompanyResponseToJSON,\n  DeleteCompanyResponse,\n  DeleteCompanyResponseFromJSON,\n  DeleteCompanyResponseToJSON,\n  GetCompaniesResponse,\n  GetCompaniesResponseFromJSON,\n  GetCompaniesResponseToJSON,\n  GetCompanyResponse,\n  GetCompanyResponseFromJSON,\n  GetCompanyResponseToJSON,\n  NotFoundResponse,\n  NotFoundResponseFromJSON,\n  NotFoundResponseToJSON,\n  PaymentRequired,\n  PaymentRequiredFromJSON,\n  PaymentRequiredToJSON,\n  Unauthorized,\n  UnauthorizedFromJSON,\n  UnauthorizedToJSON,\n  UnexpectedError,\n  UnexpectedErrorFromJSON,\n  UnexpectedErrorToJSON,\n  Unprocessable,\n  UnprocessableFromJSON,\n  UnprocessableToJSON,\n  UpdateCompanyResponse,\n  UpdateCompanyResponseFromJSON,\n  UpdateCompanyResponseToJSON,\n} from '../models';\n\nexport {\n  CompaniesAddRequest,\n  CompaniesAllRequest,\n  CompaniesDeleteRequest,\n  CompaniesOneRequest,\n  CompaniesUpdateRequest,\n} from './CompaniesApiInterface';\n\nimport {\n  CompaniesAddRequestInternal,\n  CompaniesAllRequestInternal,\n  CompaniesDeleteRequestInternal,\n  CompaniesOneRequestInternal,\n  CompaniesUpdateRequestInternal,\n} from './CompaniesApiInterface';\n\n/**\n *\n */\nexport class CompaniesApi extends runtime.BaseAPI {\n  /**\n   * Create company\n   * Create company\n   */\n  async companiesAddRaw(\n    requestParameters: CompaniesAddRequestInternal\n  ): Promise<runtime.ApiResponse<CreateCompanyResponse>> {\n    if (\n      requestParameters.company === null ||\n      requestParameters.company === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'company',\n        'Required parameter requestParameters.company was null or undefined when calling companiesAdd.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/companies`,\n      method: 'POST',\n      headers: headerParameters,\n      query: queryParameters,\n      body: CompanyToJSON(requestParameters.company),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      CreateCompanyResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Create company\n   * Create company\n   */\n  async companiesAdd(\n    requestParameters: CompaniesAddRequestInternal\n  ): Promise<CreateCompanyResponse> {\n    const response = await this.companiesAddRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * List companies\n   * List companies\n   */\n  async companiesAllRaw(\n    requestParameters: CompaniesAllRequestInternal\n  ): Promise<runtime.ApiResponse<GetCompaniesResponse>> {\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    if (requestParameters.cursor !== undefined) {\n      queryParameters['cursor'] = requestParameters.cursor;\n    }\n\n    if (requestParameters.limit !== undefined) {\n      queryParameters['limit'] = requestParameters.limit;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/companies`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetCompaniesResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * List companies\n   * List companies\n   */\n  async companiesAll(\n    requestParameters: CompaniesAllRequestInternal\n  ): Promise<GetCompaniesResponse> {\n    const response = await this.companiesAllRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Delete company\n   * Delete company\n   */\n  async companiesDeleteRaw(\n    requestParameters: CompaniesDeleteRequestInternal\n  ): Promise<runtime.ApiResponse<DeleteCompanyResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling companiesDelete.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/companies/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'DELETE',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      DeleteCompanyResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Delete company\n   * Delete company\n   */\n  async companiesDelete(\n    requestParameters: CompaniesDeleteRequestInternal\n  ): Promise<DeleteCompanyResponse> {\n    const response = await this.companiesDeleteRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Get company\n   * Get company\n   */\n  async companiesOneRaw(\n    requestParameters: CompaniesOneRequestInternal\n  ): Promise<runtime.ApiResponse<GetCompanyResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling companiesOne.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/companies/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetCompanyResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Get company\n   * Get company\n   */\n  async companiesOne(\n    requestParameters: CompaniesOneRequestInternal\n  ): Promise<GetCompanyResponse> {\n    const response = await this.companiesOneRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Update company\n   * Update company\n   */\n  async companiesUpdateRaw(\n    requestParameters: CompaniesUpdateRequestInternal\n  ): Promise<runtime.ApiResponse<UpdateCompanyResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling companiesUpdate.'\n      );\n    }\n\n    if (\n      requestParameters.company === null ||\n      requestParameters.company === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'company',\n        'Required parameter requestParameters.company was null or undefined when calling companiesUpdate.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/companies/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'PATCH',\n      headers: headerParameters,\n      query: queryParameters,\n      body: CompanyToJSON(requestParameters.company),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      UpdateCompanyResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Update company\n   * Update company\n   */\n  async companiesUpdate(\n    requestParameters: CompaniesUpdateRequestInternal\n  ): Promise<UpdateCompanyResponse> {\n    const response = await this.companiesUpdateRaw(requestParameters);\n    return await response.value();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n\nimport * as runtime from '../runtime';\nimport {\n  BadRequest,\n  BadRequestFromJSON,\n  BadRequestToJSON,\n  Contact,\n  ContactFromJSON,\n  ContactToJSON,\n  CreateContactResponse,\n  CreateContactResponseFromJSON,\n  CreateContactResponseToJSON,\n  DeleteContactResponse,\n  DeleteContactResponseFromJSON,\n  DeleteContactResponseToJSON,\n  GetContactResponse,\n  GetContactResponseFromJSON,\n  GetContactResponseToJSON,\n  GetContactsResponse,\n  GetContactsResponseFromJSON,\n  GetContactsResponseToJSON,\n  NotFoundResponse,\n  NotFoundResponseFromJSON,\n  NotFoundResponseToJSON,\n  PaymentRequired,\n  PaymentRequiredFromJSON,\n  PaymentRequiredToJSON,\n  Unauthorized,\n  UnauthorizedFromJSON,\n  UnauthorizedToJSON,\n  UnexpectedError,\n  UnexpectedErrorFromJSON,\n  UnexpectedErrorToJSON,\n  Unprocessable,\n  UnprocessableFromJSON,\n  UnprocessableToJSON,\n  UpdateContactResponse,\n  UpdateContactResponseFromJSON,\n  UpdateContactResponseToJSON,\n} from '../models';\n\nexport {\n  ContactsAddRequest,\n  ContactsAllRequest,\n  ContactsDeleteRequest,\n  ContactsOneRequest,\n  ContactsUpdateRequest,\n} from './ContactsApiInterface';\n\nimport {\n  ContactsAddRequestInternal,\n  ContactsAllRequestInternal,\n  ContactsDeleteRequestInternal,\n  ContactsOneRequestInternal,\n  ContactsUpdateRequestInternal,\n} from './ContactsApiInterface';\n\n/**\n *\n */\nexport class ContactsApi extends runtime.BaseAPI {\n  /**\n   * Create contact\n   * Create contact\n   */\n  async contactsAddRaw(\n    requestParameters: ContactsAddRequestInternal\n  ): Promise<runtime.ApiResponse<CreateContactResponse>> {\n    if (\n      requestParameters.contact === null ||\n      requestParameters.contact === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'contact',\n        'Required parameter requestParameters.contact was null or undefined when calling contactsAdd.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/contacts`,\n      method: 'POST',\n      headers: headerParameters,\n      query: queryParameters,\n      body: ContactToJSON(requestParameters.contact),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      CreateContactResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Create contact\n   * Create contact\n   */\n  async contactsAdd(\n    requestParameters: ContactsAddRequestInternal\n  ): Promise<CreateContactResponse> {\n    const response = await this.contactsAddRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * List contacts\n   * List contacts\n   */\n  async contactsAllRaw(\n    requestParameters: ContactsAllRequestInternal\n  ): Promise<runtime.ApiResponse<GetContactsResponse>> {\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    if (requestParameters.cursor !== undefined) {\n      queryParameters['cursor'] = requestParameters.cursor;\n    }\n\n    if (requestParameters.limit !== undefined) {\n      queryParameters['limit'] = requestParameters.limit;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/contacts`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetContactsResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * List contacts\n   * List contacts\n   */\n  async contactsAll(\n    requestParameters: ContactsAllRequestInternal\n  ): Promise<GetContactsResponse> {\n    const response = await this.contactsAllRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Delete contact\n   * Delete contact\n   */\n  async contactsDeleteRaw(\n    requestParameters: ContactsDeleteRequestInternal\n  ): Promise<runtime.ApiResponse<DeleteContactResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling contactsDelete.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/contacts/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'DELETE',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      DeleteContactResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Delete contact\n   * Delete contact\n   */\n  async contactsDelete(\n    requestParameters: ContactsDeleteRequestInternal\n  ): Promise<DeleteContactResponse> {\n    const response = await this.contactsDeleteRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Get contact\n   * Get contact\n   */\n  async contactsOneRaw(\n    requestParameters: ContactsOneRequestInternal\n  ): Promise<runtime.ApiResponse<GetContactResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling contactsOne.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/contacts/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetContactResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Get contact\n   * Get contact\n   */\n  async contactsOne(\n    requestParameters: ContactsOneRequestInternal\n  ): Promise<GetContactResponse> {\n    const response = await this.contactsOneRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Update contact\n   * Update contact\n   */\n  async contactsUpdateRaw(\n    requestParameters: ContactsUpdateRequestInternal\n  ): Promise<runtime.ApiResponse<UpdateContactResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling contactsUpdate.'\n      );\n    }\n\n    if (\n      requestParameters.contact === null ||\n      requestParameters.contact === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'contact',\n        'Required parameter requestParameters.contact was null or undefined when calling contactsUpdate.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/contacts/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'PATCH',\n      headers: headerParameters,\n      query: queryParameters,\n      body: ContactToJSON(requestParameters.contact),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      UpdateContactResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Update contact\n   * Update contact\n   */\n  async contactsUpdate(\n    requestParameters: ContactsUpdateRequestInternal\n  ): Promise<UpdateContactResponse> {\n    const response = await this.contactsUpdateRaw(requestParameters);\n    return await response.value();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n\nimport * as runtime from '../runtime';\nimport {\n  BadRequest,\n  BadRequestFromJSON,\n  BadRequestToJSON,\n  CreateLeadResponse,\n  CreateLeadResponseFromJSON,\n  CreateLeadResponseToJSON,\n  DeleteLeadResponse,\n  DeleteLeadResponseFromJSON,\n  DeleteLeadResponseToJSON,\n  GetLeadResponse,\n  GetLeadResponseFromJSON,\n  GetLeadResponseToJSON,\n  GetLeadsResponse,\n  GetLeadsResponseFromJSON,\n  GetLeadsResponseToJSON,\n  Lead,\n  LeadFromJSON,\n  LeadToJSON,\n  NotFoundResponse,\n  NotFoundResponseFromJSON,\n  NotFoundResponseToJSON,\n  PaymentRequired,\n  PaymentRequiredFromJSON,\n  PaymentRequiredToJSON,\n  Unauthorized,\n  UnauthorizedFromJSON,\n  UnauthorizedToJSON,\n  UnexpectedError,\n  UnexpectedErrorFromJSON,\n  UnexpectedErrorToJSON,\n  Unprocessable,\n  UnprocessableFromJSON,\n  UnprocessableToJSON,\n  UpdateLeadResponse,\n  UpdateLeadResponseFromJSON,\n  UpdateLeadResponseToJSON,\n} from '../models';\n\nexport {\n  LeadsAddRequest,\n  LeadsAllRequest,\n  LeadsDeleteRequest,\n  LeadsOneRequest,\n  LeadsUpdateRequest,\n} from './LeadsApiInterface';\n\nimport {\n  LeadsAddRequestInternal,\n  LeadsAllRequestInternal,\n  LeadsDeleteRequestInternal,\n  LeadsOneRequestInternal,\n  LeadsUpdateRequestInternal,\n} from './LeadsApiInterface';\n\n/**\n *\n */\nexport class LeadsApi extends runtime.BaseAPI {\n  /**\n   * Create lead\n   * Create lead\n   */\n  async leadsAddRaw(\n    requestParameters: LeadsAddRequestInternal\n  ): Promise<runtime.ApiResponse<CreateLeadResponse>> {\n    if (\n      requestParameters.lead === null ||\n      requestParameters.lead === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'lead',\n        'Required parameter requestParameters.lead was null or undefined when calling leadsAdd.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/leads`,\n      method: 'POST',\n      headers: headerParameters,\n      query: queryParameters,\n      body: LeadToJSON(requestParameters.lead),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      CreateLeadResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Create lead\n   * Create lead\n   */\n  async leadsAdd(\n    requestParameters: LeadsAddRequestInternal\n  ): Promise<CreateLeadResponse> {\n    const response = await this.leadsAddRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * List leads\n   * List leads\n   */\n  async leadsAllRaw(\n    requestParameters: LeadsAllRequestInternal\n  ): Promise<runtime.ApiResponse<GetLeadsResponse>> {\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    if (requestParameters.cursor !== undefined) {\n      queryParameters['cursor'] = requestParameters.cursor;\n    }\n\n    if (requestParameters.limit !== undefined) {\n      queryParameters['limit'] = requestParameters.limit;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/leads`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetLeadsResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * List leads\n   * List leads\n   */\n  async leadsAll(\n    requestParameters: LeadsAllRequestInternal\n  ): Promise<GetLeadsResponse> {\n    const response = await this.leadsAllRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Delete lead\n   * Delete lead\n   */\n  async leadsDeleteRaw(\n    requestParameters: LeadsDeleteRequestInternal\n  ): Promise<runtime.ApiResponse<DeleteLeadResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling leadsDelete.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/leads/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'DELETE',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      DeleteLeadResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Delete lead\n   * Delete lead\n   */\n  async leadsDelete(\n    requestParameters: LeadsDeleteRequestInternal\n  ): Promise<DeleteLeadResponse> {\n    const response = await this.leadsDeleteRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Get lead\n   * Get lead\n   */\n  async leadsOneRaw(\n    requestParameters: LeadsOneRequestInternal\n  ): Promise<runtime.ApiResponse<GetLeadResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling leadsOne.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/leads/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetLeadResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Get lead\n   * Get lead\n   */\n  async leadsOne(\n    requestParameters: LeadsOneRequestInternal\n  ): Promise<GetLeadResponse> {\n    const response = await this.leadsOneRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Update lead\n   * Update lead\n   */\n  async leadsUpdateRaw(\n    requestParameters: LeadsUpdateRequestInternal\n  ): Promise<runtime.ApiResponse<UpdateLeadResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling leadsUpdate.'\n      );\n    }\n\n    if (\n      requestParameters.lead === null ||\n      requestParameters.lead === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'lead',\n        'Required parameter requestParameters.lead was null or undefined when calling leadsUpdate.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/leads/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'PATCH',\n      headers: headerParameters,\n      query: queryParameters,\n      body: LeadToJSON(requestParameters.lead),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      UpdateLeadResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Update lead\n   * Update lead\n   */\n  async leadsUpdate(\n    requestParameters: LeadsUpdateRequestInternal\n  ): Promise<UpdateLeadResponse> {\n    const response = await this.leadsUpdateRaw(requestParameters);\n    return await response.value();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n\nimport * as runtime from '../runtime';\nimport {\n  BadRequest,\n  BadRequestFromJSON,\n  BadRequestToJSON,\n  CreateOpportunityResponse,\n  CreateOpportunityResponseFromJSON,\n  CreateOpportunityResponseToJSON,\n  DeleteOpportunityResponse,\n  DeleteOpportunityResponseFromJSON,\n  DeleteOpportunityResponseToJSON,\n  GetOpportunitiesResponse,\n  GetOpportunitiesResponseFromJSON,\n  GetOpportunitiesResponseToJSON,\n  GetOpportunityResponse,\n  GetOpportunityResponseFromJSON,\n  GetOpportunityResponseToJSON,\n  NotFoundResponse,\n  NotFoundResponseFromJSON,\n  NotFoundResponseToJSON,\n  Opportunity,\n  OpportunityFromJSON,\n  OpportunityToJSON,\n  PaymentRequired,\n  PaymentRequiredFromJSON,\n  PaymentRequiredToJSON,\n  Unauthorized,\n  UnauthorizedFromJSON,\n  UnauthorizedToJSON,\n  UnexpectedError,\n  UnexpectedErrorFromJSON,\n  UnexpectedErrorToJSON,\n  Unprocessable,\n  UnprocessableFromJSON,\n  UnprocessableToJSON,\n  UpdateOpportunityResponse,\n  UpdateOpportunityResponseFromJSON,\n  UpdateOpportunityResponseToJSON,\n} from '../models';\n\nexport {\n  OpportunitiesAddRequest,\n  OpportunitiesAllRequest,\n  OpportunitiesDeleteRequest,\n  OpportunitiesOneRequest,\n  OpportunitiesUpdateRequest,\n} from './OpportunitiesApiInterface';\n\nimport {\n  OpportunitiesAddRequestInternal,\n  OpportunitiesAllRequestInternal,\n  OpportunitiesDeleteRequestInternal,\n  OpportunitiesOneRequestInternal,\n  OpportunitiesUpdateRequestInternal,\n} from './OpportunitiesApiInterface';\n\n/**\n *\n */\nexport class OpportunitiesApi extends runtime.BaseAPI {\n  /**\n   * Create opportunity\n   * Create opportunity\n   */\n  async opportunitiesAddRaw(\n    requestParameters: OpportunitiesAddRequestInternal\n  ): Promise<runtime.ApiResponse<CreateOpportunityResponse>> {\n    if (\n      requestParameters.opportunity === null ||\n      requestParameters.opportunity === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'opportunity',\n        'Required parameter requestParameters.opportunity was null or undefined when calling opportunitiesAdd.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/opportunities`,\n      method: 'POST',\n      headers: headerParameters,\n      query: queryParameters,\n      body: OpportunityToJSON(requestParameters.opportunity),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      CreateOpportunityResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Create opportunity\n   * Create opportunity\n   */\n  async opportunitiesAdd(\n    requestParameters: OpportunitiesAddRequestInternal\n  ): Promise<CreateOpportunityResponse> {\n    const response = await this.opportunitiesAddRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * List opportunities\n   * List opportunities\n   */\n  async opportunitiesAllRaw(\n    requestParameters: OpportunitiesAllRequestInternal\n  ): Promise<runtime.ApiResponse<GetOpportunitiesResponse>> {\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    if (requestParameters.cursor !== undefined) {\n      queryParameters['cursor'] = requestParameters.cursor;\n    }\n\n    if (requestParameters.limit !== undefined) {\n      queryParameters['limit'] = requestParameters.limit;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/opportunities`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetOpportunitiesResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * List opportunities\n   * List opportunities\n   */\n  async opportunitiesAll(\n    requestParameters: OpportunitiesAllRequestInternal\n  ): Promise<GetOpportunitiesResponse> {\n    const response = await this.opportunitiesAllRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Delete opportunity\n   * Delete opportunity\n   */\n  async opportunitiesDeleteRaw(\n    requestParameters: OpportunitiesDeleteRequestInternal\n  ): Promise<runtime.ApiResponse<DeleteOpportunityResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling opportunitiesDelete.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/opportunities/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'DELETE',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      DeleteOpportunityResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Delete opportunity\n   * Delete opportunity\n   */\n  async opportunitiesDelete(\n    requestParameters: OpportunitiesDeleteRequestInternal\n  ): Promise<DeleteOpportunityResponse> {\n    const response = await this.opportunitiesDeleteRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Get opportunity\n   * Get opportunity\n   */\n  async opportunitiesOneRaw(\n    requestParameters: OpportunitiesOneRequestInternal\n  ): Promise<runtime.ApiResponse<GetOpportunityResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling opportunitiesOne.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/opportunities/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters,\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GetOpportunityResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Get opportunity\n   * Get opportunity\n   */\n  async opportunitiesOne(\n    requestParameters: OpportunitiesOneRequestInternal\n  ): Promise<GetOpportunityResponse> {\n    const response = await this.opportunitiesOneRaw(requestParameters);\n    return await response.value();\n  }\n\n  /**\n   * Update opportunity\n   * Update opportunity\n   */\n  async opportunitiesUpdateRaw(\n    requestParameters: OpportunitiesUpdateRequestInternal\n  ): Promise<runtime.ApiResponse<UpdateOpportunityResponse>> {\n    if (requestParameters.id === null || requestParameters.id === undefined) {\n      throw new runtime.RequiredError(\n        'id',\n        'Required parameter requestParameters.id was null or undefined when calling opportunitiesUpdate.'\n      );\n    }\n\n    if (\n      requestParameters.opportunity === null ||\n      requestParameters.opportunity === undefined\n    ) {\n      throw new runtime.RequiredError(\n        'opportunity',\n        'Required parameter requestParameters.opportunity was null or undefined when calling opportunitiesUpdate.'\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.raw !== undefined) {\n      queryParameters['raw'] = requestParameters.raw;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters['Content-Type'] = 'application/json';\n\n    if (\n      requestParameters.xApideckConsumerId !== undefined &&\n      requestParameters.xApideckConsumerId !== null\n    ) {\n      headerParameters['x-apideck-consumer-id'] = String(\n        requestParameters.xApideckConsumerId\n      );\n    }\n\n    if (\n      requestParameters.xApideckAppId !== undefined &&\n      requestParameters.xApideckAppId !== null\n    ) {\n      headerParameters['x-apideck-app-id'] = String(\n        requestParameters.xApideckAppId\n      );\n    }\n\n    if (\n      requestParameters.xApideckServiceId !== undefined &&\n      requestParameters.xApideckServiceId !== null\n    ) {\n      headerParameters['x-apideck-service-id'] = String(\n        requestParameters.xApideckServiceId\n      );\n    }\n\n    if (this.configuration && this.configuration.apiKey) {\n      headerParameters['Authorization'] = `Bearer ${this.configuration.apiKey}`;\n    }\n\n    if (this.configuration && this.configuration.applicationId) {\n      headerParameters['x-apideck-app-id'] = this.configuration.applicationId;\n    }\n\n    if (this.configuration && this.configuration.consumerId) {\n      headerParameters['x-apideck-consumer-id'] = this.configuration.consumerId;\n    }\n\n    const response = await this.request({\n      path: `/crm/opportunities/{id}`.replace(\n        `{${'id'}}`,\n        encodeURIComponent(String(requestParameters.id))\n      ),\n      method: 'PATCH',\n      headers: headerParameters,\n      query: queryParameters,\n      body: OpportunityToJSON(requestParameters.opportunity),\n    });\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      UpdateOpportunityResponseFromJSON(jsonValue)\n    );\n  }\n\n  /**\n   * Update opportunity\n   * Update opportunity\n   */\n  async opportunitiesUpdate(\n    requestParameters: OpportunitiesUpdateRequestInternal\n  ): Promise<UpdateOpportunityResponse> {\n    const response = await this.opportunitiesUpdateRaw(requestParameters);\n    return await response.value();\n  }\n}\n","import * as Crm from './gen/crm';\n\nexport class Mapper {\n  public static toInternal(\n    requestParameters:\n      | Crm.CompaniesAllRequest\n      | Crm.CompaniesOneRequest\n      | Crm.CompaniesAddRequest\n      | Crm.CompaniesUpdateRequest\n      | Crm.CompaniesDeleteRequest\n  ): any {\n    const mappedRequestParameters = {\n      ...requestParameters,\n      xApideckAppId: requestParameters.applicationId,\n      xApideckConsumerId: requestParameters.consumerId,\n      xApideckServiceId: requestParameters.serviceId,\n    };\n\n    return mappedRequestParameters;\n  }\n}\n\nexport class CompaniesApi {\n  private companies: Crm.CompaniesApi;\n  constructor(readonly config: Crm.Configuration) {\n    this.companies = new Crm.CompaniesApi(config);\n  }\n\n  async list(parameters: Crm.CompaniesAllRequest) {\n    return this.companies.companiesAll(\n      Mapper.toInternal(parameters) as Crm.CompaniesAllRequestInternal\n    );\n  }\n\n  async retrieve(parameters: Crm.CompaniesOneRequest) {\n    return this.companies.companiesOne(\n      Mapper.toInternal(parameters as Crm.CompaniesOneRequestInternal)\n    );\n  }\n\n  async create(parameters: Crm.CompaniesAddRequest) {\n    return this.companies.companiesAdd(\n      Mapper.toInternal(parameters as Crm.CompaniesAddRequestInternal)\n    );\n  }\n\n  async update(parameters: Crm.CompaniesUpdateRequest) {\n    return this.companies.companiesUpdate(\n      Mapper.toInternal(parameters) as Crm.CompaniesUpdateRequestInternal\n    );\n  }\n\n  async delete(parameters: Crm.CompaniesDeleteRequest) {\n    return this.companies.companiesDelete(\n      Mapper.toInternal(parameters) as Crm.CompaniesDeleteRequestInternal\n    );\n  }\n}\nexport class ContactsApi {\n  private contacts: Crm.ContactsApi;\n  constructor(readonly config: Crm.Configuration) {\n    this.contacts = new Crm.ContactsApi(config);\n  }\n\n  async list(parameters: Crm.ContactsAllRequest) {\n    return this.contacts.contactsAll(\n      Mapper.toInternal(parameters) as Crm.ContactsAllRequestInternal\n    );\n  }\n\n  async retrieve(parameters: Crm.ContactsOneRequest) {\n    return this.contacts.contactsOne(\n      Mapper.toInternal(parameters as Crm.ContactsOneRequestInternal)\n    );\n  }\n\n  async create(parameters: Crm.ContactsAddRequest) {\n    return this.contacts.contactsAdd(\n      Mapper.toInternal(parameters as Crm.ContactsAddRequestInternal)\n    );\n  }\n\n  async update(parameters: Crm.ContactsUpdateRequest) {\n    return this.contacts.contactsUpdate(\n      Mapper.toInternal(parameters) as Crm.ContactsUpdateRequestInternal\n    );\n  }\n\n  async delete(parameters: Crm.ContactsDeleteRequest) {\n    return this.contacts.contactsDelete(\n      Mapper.toInternal(parameters) as Crm.ContactsDeleteRequestInternal\n    );\n  }\n}\nexport class LeadsApi {\n  private leads: Crm.LeadsApi;\n  constructor(readonly config: Crm.Configuration) {\n    this.leads = new Crm.LeadsApi(config);\n  }\n\n  async list(parameters: Crm.LeadsAllRequest) {\n    return this.leads.leadsAll(\n      Mapper.toInternal(parameters) as Crm.LeadsAllRequestInternal\n    );\n  }\n\n  async retrieve(parameters: Crm.LeadsOneRequest) {\n    return this.leads.leadsOne(\n      Mapper.toInternal(parameters as Crm.LeadsOneRequestInternal)\n    );\n  }\n\n  async create(parameters: Crm.LeadsAddRequest) {\n    return this.leads.leadsAdd(\n      Mapper.toInternal(parameters as Crm.LeadsAddRequestInternal)\n    );\n  }\n\n  async update(parameters: Crm.LeadsUpdateRequest) {\n    return this.leads.leadsUpdate(\n      Mapper.toInternal(parameters) as Crm.LeadsUpdateRequestInternal\n    );\n  }\n\n  async delete(parameters: Crm.LeadsDeleteRequest) {\n    return this.leads.leadsDelete(\n      Mapper.toInternal(parameters) as Crm.LeadsDeleteRequestInternal\n    );\n  }\n}\nexport class OpportunitiesApi {\n  private opportunities: Crm.OpportunitiesApi;\n  constructor(readonly config: Crm.Configuration) {\n    this.opportunities = new Crm.OpportunitiesApi(config);\n  }\n\n  async list(parameters: Crm.OpportunitiesAllRequest) {\n    return this.opportunities.opportunitiesAll(\n      Mapper.toInternal(parameters) as Crm.OpportunitiesAllRequestInternal\n    );\n  }\n\n  async retrieve(parameters: Crm.OpportunitiesOneRequest) {\n    return this.opportunities.opportunitiesOne(\n      Mapper.toInternal(parameters as Crm.OpportunitiesOneRequestInternal)\n    );\n  }\n\n  async create(parameters: Crm.OpportunitiesAddRequest) {\n    return this.opportunities.opportunitiesAdd(\n      Mapper.toInternal(parameters as Crm.OpportunitiesAddRequestInternal)\n    );\n  }\n\n  async update(parameters: Crm.OpportunitiesUpdateRequest) {\n    return this.opportunities.opportunitiesUpdate(\n      Mapper.toInternal(parameters) as Crm.OpportunitiesUpdateRequestInternal\n    );\n  }\n\n  async delete(parameters: Crm.OpportunitiesDeleteRequest) {\n    return this.opportunities.opportunitiesDelete(\n      Mapper.toInternal(parameters) as Crm.OpportunitiesDeleteRequestInternal\n    );\n  }\n}\n\nexport class CrmApi {\n  readonly companies: CompaniesApi;\n  readonly contacts: ContactsApi;\n  readonly leads: LeadsApi;\n  readonly opportunities: OpportunitiesApi;\n\n  constructor(readonly configParameters: Crm.ConfigurationParameters) {\n    const config = new Crm.Configuration(configParameters);\n    this.companies = new CompaniesApi(config);\n    this.contacts = new ContactsApi(config);\n    this.leads = new LeadsApi(config);\n    this.opportunities = new OpportunitiesApi(config);\n  }\n}\n\nexport class Apideck {\n  readonly crm: CrmApi;\n  constructor(readonly config: Crm.ConfigurationParameters) {\n    this.crm = new CrmApi(config);\n  }\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","BASE_PATH","replace","BaseAPI","configuration","url","init","fetchParams","_this","middleware","pre","fetch","fetchApi","response","post","clone","withMiddleware","concat","withPreMiddleware","preMiddlewares","middlewares","map","withPostMiddleware","postMiddlewares","request","createFetchParams","status","basePath","path","body","FormData","URLSearchParams","Blob","JSON","stringify","headers","assign","RequiredError","field","msg","Configuration","applicationId","consumerId","apiKey","exists","json","AddressType","ContactGender","PhoneNumberType","JSONApiResponse","raw","transformer","jsonValue","VoidApiResponse","BlobApiResponse","blob","TextApiResponse","text","AddressFromJSON","AddressFromJSONTyped","ignoreDiscriminator","id","line1","line2","city","postalCode","country","latitude","longitude","AddressToJSON","postal_code","BadRequestFromJSONTyped","statusCode","typeName","message","detail","ref","BankAccountFromJSON","BankAccountFromJSONTyped","iban","bic","BankAccountToJSON","CompanyFromJSON","CompanyFromJSONTyped","interactionCount","ownerId","imageUrl","description","vatNumber","currency","fax","bankAccounts","websites","WebsiteFromJSON","addresses","socialLinks","SocialLinkFromJSON","phoneNumbers","PhoneNumberFromJSON","emails","EmailFromJSON","customFields","CustomFieldFromJSON","tags","updatedBy","createdBy","updatedAt","createdAt","CompanyToJSON","owner_id","image_url","vat_number","bank_accounts","WebsiteToJSON","social_links","SocialLinkToJSON","phone_numbers","PhoneNumberToJSON","EmailToJSON","custom_fields","CustomFieldToJSON","ContactFromJSON","ContactFromJSONTyped","companyId","leadId","firstName","middleName","lastName","prefix","suffix","title","department","language","gender","birthday","image","leadSource","ContactToJSON","company_id","lead_id","first_name","middle_name","last_name","lead_source","CreateCompanyResponseFromJSON","CreateCompanyResponseFromJSONTyped","service","resource","operation","data","UnifiedIdFromJSON","CreateContactResponseFromJSON","CreateContactResponseFromJSONTyped","CreateLeadResponseFromJSON","CreateLeadResponseFromJSONTyped","CreateOpportunityResponseFromJSON","CreateOpportunityResponseFromJSONTyped","CustomFieldFromJSONTyped","DeleteCompanyResponseFromJSON","DeleteCompanyResponseFromJSONTyped","DeleteContactResponseFromJSON","DeleteContactResponseFromJSONTyped","DeleteLeadResponseFromJSON","DeleteLeadResponseFromJSONTyped","DeleteOpportunityResponseFromJSON","DeleteOpportunityResponseFromJSONTyped","EmailFromJSONTyped","email","GetCompaniesResponseFromJSON","GetCompaniesResponseFromJSONTyped","meta","MetaFromJSON","links","LinksFromJSON","GetCompanyResponseFromJSON","GetCompanyResponseFromJSONTyped","GetContactResponseFromJSON","GetContactResponseFromJSONTyped","GetContactsResponseFromJSON","GetContactsResponseFromJSONTyped","GetLeadResponseFromJSON","GetLeadResponseFromJSONTyped","LeadFromJSON","GetLeadsResponseFromJSON","GetLeadsResponseFromJSONTyped","GetOpportunitiesResponseFromJSON","GetOpportunitiesResponseFromJSONTyped","OpportunityFromJSON","GetOpportunityResponseFromJSON","GetOpportunityResponseFromJSONTyped","LeadFromJSONTyped","companyName","LeadToJSON","company_name","LinksFromJSONTyped","previous","current","LinksToJSON","MetaFromJSONTyped","itemsOnPage","cursors","MetaCursorsFromJSON","MetaToJSON","items_on_page","MetaCursorsToJSON","MetaCursorsFromJSONTyped","NotFoundResponseFromJSONTyped","NotImplementedFromJSONTyped","OpportunityFromJSONTyped","monetaryAmount","winProbability","closeDate","Date","lossReasonId","pipelineId","pipelineStageId","sourceId","primaryContactId","contactId","priority","statusId","dateStageChanged","dateLastContacted","dateLeadCreated","OpportunityToJSON","monetary_amount","win_probability","close_date","toISOString","substr","loss_reason_id","pipeline_id","pipeline_stage_id","source_id","primary_contact_id","contact_id","status_id","PaymentRequiredFromJSONTyped","PhoneNumberFromJSONTyped","number","SocialLinkFromJSONTyped","platform","UnauthorizedFromJSONTyped","UnexpectedErrorFromJSONTyped","UnifiedIdFromJSONTyped","UnifiedIdToJSON","UnprocessableFromJSONTyped","UpdateCompanyResponseFromJSON","UpdateCompanyResponseFromJSONTyped","UpdateContactResponseFromJSON","UpdateContactResponseFromJSONTyped","UpdateLeadResponseFromJSON","UpdateLeadResponseFromJSONTyped","UpdateOpportunityResponseFromJSON","UpdateOpportunityResponseFromJSONTyped","WebsiteFromJSONTyped","category","CompaniesApi","companiesAddRaw","requestParameters","company","queryParameters","headerParameters","xApideckConsumerId","String","xApideckAppId","xApideckServiceId","query","companiesAdd","companiesAllRaw","cursor","limit","companiesAll","companiesDeleteRaw","encodeURIComponent","companiesDelete","companiesOneRaw","companiesOne","companiesUpdateRaw","companiesUpdate","ContactsApi","contactsAddRaw","contact","contactsAdd","contactsAllRaw","contactsAll","contactsDeleteRaw","contactsDelete","contactsOneRaw","contactsOne","contactsUpdateRaw","contactsUpdate","LeadsApi","leadsAddRaw","lead","leadsAdd","leadsAllRaw","leadsAll","leadsDeleteRaw","leadsDelete","leadsOneRaw","leadsOne","leadsUpdateRaw","leadsUpdate","OpportunitiesApi","opportunitiesAddRaw","opportunity","opportunitiesAdd","opportunitiesAllRaw","opportunitiesAll","opportunitiesDeleteRaw","opportunitiesDelete","opportunitiesOneRaw","opportunitiesOne","opportunitiesUpdateRaw","opportunitiesUpdate","Mapper","toInternal","serviceId","config","companies","Crm","list","parameters","retrieve","update","contacts","leads","opportunities","CrmApi","configParameters","Apideck","crm","status_code","csv","ssv","tsv","pipes","consumes","contentType","reduce","acc","querystring","params","fullKey","Array","multiValue","singleValue","join","filter","part"],"mappings":"ysFAOA,IAAIA,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEnB,WAzfPqB,EAyfyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASG,EAAIrC,EAAKqB,GACzB,IACE,MAAO,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,GACP,MAAO,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBhD,GAAkB,WAClC,OAAOiD,MAGT,IAAIC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,GAWtC,SAASO,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOqB,KAAKxB,QAAQE,EAAQC,SAkClC,SAAS6B,EAAcrC,EAAWsC,GAgChC,IAAIC,EAgCJV,KAAKxB,QA9BL,SAAiBE,EAAQC,GACvB,SAASgC,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAItB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS/B,SAASsB,EAAQI,QACvC,QA1TEG,IA0TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOlC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOE,KAIT,OAHAnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAImC,EAAO9B,EAAOZ,IAElB,OAAM0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,GAoDX,SAASuC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,EAGrB,SAAShB,EAAQL,GAIf8B,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAStF,GAC9B,GAAIuF,EACF,OAAOA,EAAe1C,KAAKyC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAI7F,EAAOiD,KAAKyC,EAAUI,GAGxB,OAFAlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,EAOX,OAHAA,EAAK/D,WAzeTqB,EA0eI0C,EAAKzC,MAAO,EAELyC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAElF,WAzfPqB,EAyfyBC,MAAM,GA+MnC,OA5mBAe,EAAkBnD,UAAY2D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAAcvF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQsG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCzG,EAAQ0G,KAAO,SAASH,GAQtB,OAPIrG,OAAOyG,eACTzG,OAAOyG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBzC,EAAOyF,EAAQ3F,EAAmB,sBAEpC2F,EAAOpG,UAAYD,OAAO2B,OAAOiC,GAC1ByC,GAOTvG,EAAQ6G,MAAQ,SAASzE,GACvB,MAAO,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpC8D,EAAc9D,UAAUO,GAAuB,WAC7C,OAAO+C,MAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,SAE1C,IAAIC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,GAGF,OAAOlE,EAAQsG,oBAAoB7E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BkD,EAAGtD,GAAkB,WACnB,OAAOiD,MAGTK,EAAGmD,SAAW,WACZ,MAAO,sBAkCTjH,EAAQkH,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIlG,KAAOmG,EACdD,EAAKxB,KAAK1E,GAMZ,OAJAkG,EAAKE,UAIE,SAASpC,IACd,KAAOkC,EAAKjB,QAAQ,CAClB,IAAIjF,EAAMkG,EAAKG,MACf,GAAIrG,KAAOmG,EAGT,OAFAnC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,EAQX,OADAA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBiG,YAAapE,EAEb6D,MAAO,SAASyB,GAcd,GAbA7D,KAAK8D,KAAO,EACZ9D,KAAKuB,KAAO,EAGZvB,KAAKb,KAAOa,KAAKZ,WApgBjBP,EAqgBAmB,KAAKlB,MAAO,EACZkB,KAAKjB,SAAW,KAEhBiB,KAAKtB,OAAS,OACdsB,KAAKrB,SAzgBLE,EA2gBAmB,KAAKgC,WAAWzB,QAAQ2B,IAEnB2B,EACH,IAAK,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZpH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,MACrBhE,KAAKgD,QAnhBXnE,IAyhBFoF,KAAM,WACJjE,KAAKlB,MAAO,EAEZ,IACIoF,EADYlE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB+B,EAAWzE,KACb,MAAMyE,EAAWvF,IAGnB,OAAOqB,KAAKmE,MAGd9E,kBAAmB,SAAS+E,GAC1B,GAAIpE,KAAKlB,KACP,MAAMsF,EAGR,IAAI9F,EAAU0B,KACd,SAASqE,EAAOC,EAAKC,GAYnB,OAXAhF,EAAOE,KAAO,QACdF,EAAOZ,IAAMyF,EACb9F,EAAQiD,KAAO+C,EAEXC,IAGFjG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBY0F,EAGZ,IAAK,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAU5B,KAAK8D,KAAM,CAC7B,IAAIU,EAAW7H,EAAOiD,KAAK+B,EAAO,YAC9B8C,EAAa9H,EAAOiD,KAAK+B,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIzE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,GACT,GAAIxE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,EAMT,MAAM,IAAI7F,MAAM,0CALhB,GAAIoB,KAAK8D,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,GACrB,IAAK,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK8D,MACrBnH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,CAChC,IAAI4C,EAAe/C,EACnB,OAIA+C,IACU,UAATjF,GACS,aAATA,IACDiF,EAAa9C,QAAUjD,GACvBA,GAAO+F,EAAa5C,aAGtB4C,EAAe,MAGjB,IAAInF,EAASmF,EAAeA,EAAavC,WAAa,GAItD,OAHA5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET+F,GACF1E,KAAKtB,OAAS,OACdsB,KAAKuB,KAAOmD,EAAa5C,WAClB5C,GAGFc,KAAK2E,SAASpF,IAGvBoF,SAAU,SAASpF,EAAQwC,GACzB,GAAoB,UAAhBxC,EAAOE,KACT,MAAMF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKuB,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,MAChBO,KAAKmE,KAAOnE,KAAKrB,IAAMY,EAAOZ,IAC9BqB,KAAKtB,OAAS,SACdsB,KAAKuB,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,IACrC/B,KAAKuB,KAAOQ,GAGP7C,GAGT0F,OAAQ,SAAS9C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK2E,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,IAKb2F,MAAS,SAASjD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrC,EAASoC,EAAMQ,WACnB,GAAoB,UAAhB5C,EAAOE,KAAkB,CAC3B,IAAIqF,EAASvF,EAAOZ,IACpBuD,EAAcP,GAEhB,OAAOmD,GAMX,MAAM,IAAIlG,MAAM,0BAGlBmG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKjB,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,SAGPsB,KAAKrB,SA7rBPE,GAgsBOK,IAQJ3C,GAOsByI,EAAOzI,SAGtC,IACE0I,mBAAqB3I,EACrB,MAAO4I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7I,gCCruB7B8I,EAAY,4BAA4BC,QAAQ,OAAQ,IAQxDC,wBAGWC,iCAAAA,2CA0DH,WAAOC,EAAaC,sFACjCC,EAAc,CAAEF,IAAAA,EAAKC,KAAAA,OACAE,EAAKC,yDAAnBA,WACMC,qCAEJD,EAAWC,OAChBC,MAAOH,EAAKI,UACTL,qDACEA,UAJTA,uDAOiBC,EAAKJ,cAAcQ,SACtCL,EAAYF,IACZE,EAAYD,cAFVO,aAIqBL,EAAKC,0DAAnBA,WACMK,uCAEJL,EAAWK,KAAK,CACrBH,MAAOH,EAAKI,SACZP,IAAAA,EACAC,KAAAA,EACAO,SAAUA,EAASE,4DACdF,UANTA,gEASGA,4GAnFFJ,WAAa,8BAGpBO,eAAA,iBACQ5E,EAAOvB,KAAKkG,eAClB3E,EAAKqE,cAAarE,EAAKqE,YAAWQ,0BAC3B7E,KAGT8E,kBAAA,sCAEKC,2BAAAA,sBAEGC,EAAcD,EAAeE,KAAI,SAACX,SAAS,CAAEA,IAAAA,aAC5C7F,KAAKmG,0BAAqBI,MAGnCE,mBAAA,sCAEKC,2BAAAA,sBAEGH,EAAcG,EAAgBF,KAAI,SAACP,SAAU,CAAEA,KAAAA,aAC9CjG,KAAKmG,0BAAqBI,MAGnBI,mCAAN,WAAcrI,uFACA0B,KAAK4G,kBAAkBtI,GAArCkH,IAAAA,IAAKC,IAAAA,cACUzF,KAAK+F,SAASP,EAAKC,gBAApCO,UACOa,QAAU,KAAOb,EAASa,OAAS,8CACvCb,gBAEHA,0GAGAY,kBAAA,SAAkBtI,OACpBkH,EAAMxF,KAAKuF,cAAcuB,SAAWxI,EAAQyI,KAE1CC,EACiB,oBAAbC,UAA4B3I,EAAQ0I,gBAAgBC,UAC5D3I,EAAQ0I,gBAAgBE,iBAhDZ,oBAATC,MAiDI7I,EAAQ0I,gBAjD6BG,KAkDxC7I,EAAQ0I,KACRI,KAAKC,UAAU/I,EAAQ0I,MAEvBM,EAAU7K,OAAO8K,OACrB,GACAvH,KAAKuF,cAAc+B,QACnBhJ,EAAQgJ,eAOH,CAAE9B,IAAAA,EAAKC,KALD,CACX/G,OAAQJ,EAAQI,OAChB4I,QAASA,EACTN,KAAAA,OAsCId,MAAA,eAEA3E,EAAO,IAAIoB,EADG3C,KAAK2C,aACI3C,KAAKuF,sBAClChE,EAAKqE,WAAa5F,KAAK4F,WAAW5B,QAC3BzC,QAIEiG,yBAEQC,EAAeC,8BAC1BA,gBADWD,SADK,qCADS7I,QAyBtB+I,EACX,SAAoBpC,sBAAAA,gBAGa,MAA/BvF,KAAKuF,cAAcuB,SACf9G,KAAKuF,cAAcuB,SACnB1B,gBACeU,kBACM9F,KAAKuF,cAAcK,YAAc,sBACpC5F,KAAKuF,cAAcqC,8BACV5H,KAAKuF,cAAcsC,wBACjB7H,KAAKuF,cAAc+B,oBACzBtH,KAAKuF,cAAcuC,aAAUjJ,YA0C5CkJ,EAAOC,EAAWzK,UAEzBC,MADOwK,EAAKzK,GA8ErB,IChMY0K,ECuIAC,ECvLAC,EHgPCC,wBAEFC,EACCC,YAAAA,IAAAA,EAAsC,SAACC,UAAmBA,aAD3DF,mBACCC,qBAGJ9K,iCAAN,wFACSwC,cAAuBA,KAAKqI,IAAIL,wDAA3BM,uIAIHE,wBACQH,YAAAA,qBAEb7K,iCAAN,0GACSqB,wGAIE4J,wBACQJ,YAAAA,qBAEb7K,iCAAN,4FACewC,KAAKqI,IAAIK,yJAIbC,wBACQN,YAAAA,qBAEb7K,iCAAN,4FACewC,KAAKqI,IAAIO,kKCjNVC,EAAgBb,UACvBc,EAAqBd,YAGdc,EACdd,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1BY,KAAOsI,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9BmE,KAAO+E,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9BoK,MAAQlB,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChCqK,MAAQnB,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChCsK,KAAOpB,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9BJ,MAAQsJ,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChCuK,WAAarB,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CwK,QAAUtB,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCyK,SAAWvB,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtC0K,UAAYxB,EAAOC,EAAM,aAA2BA,EAAI,eAAhBnJ,YAI5B2K,EAAchM,WACdqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwL,GAAIxL,EAAMwL,GACVvJ,KAAMjC,EAAMiC,KACZuD,KAAMxF,EAAMwF,KACZiG,MAAOzL,EAAMyL,MACbC,MAAO1L,EAAM0L,MACbC,KAAM3L,EAAM2L,KACZ1K,MAAOjB,EAAMiB,MACbgL,YAAajM,EAAM4L,WACnBC,QAAS7L,EAAM6L,QACfC,SAAU9L,EAAM8L,SAChBC,UAAW/L,EAAM+L,oBGxFLG,EACd1B,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAa5B,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CsC,MAAQ4G,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC+K,SAAW7B,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgL,QAAU9B,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCiL,OAAS/B,EAAOC,EAAM,UAEDA,EAAI,YADrBnJ,EAEJkL,IAAMhC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,YC3ChBmL,EAAoBhC,UAC3BiC,EAAyBjC,YAGlBiC,EACdjC,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLkC,KAAOnC,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9BsL,IAAMpC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,YAIhBuL,EAAkB5M,WAClBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACL0M,KAAM1M,EAAM0M,KACZC,IAAK3M,EAAM2M,cCuHCE,EAAgBrC,UACvBsC,EAAqBtC,YAGdsC,EACdtC,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1B0L,iBAAmBxC,EAAOC,EAAM,qBAE5BA,EAAI,uBADJnJ,EAEJmE,KAAMgF,EAAI,KACVwC,QAAUzC,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACrC4L,SAAW1C,EAAOC,EAAM,aAA2BA,EAAI,eAAhBnJ,EACvC6L,YAAc3C,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC5C8L,UAAY5C,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzC+L,SAAW7C,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgM,IAAM9C,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,EAC5BiM,aAAe/C,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAIwD,QAD1CnL,EAEJkM,SAAWhD,EAAOC,EAAM,YAEnBA,EAAI,SAA4BxB,IAAIwE,SADrCnM,EAEJoM,UAAYlD,EAAOC,EAAM,aAEpBA,EAAI,UAA6BxB,IAAIqC,QADtChK,EAEJqM,YAAcnD,EAAOC,EAAM,gBAEtBA,EAAI,aAAgCxB,IAAI2E,SADzCtM,EAEJuM,aAAerD,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAI6E,SAD1CxM,EAEJyM,OAASvD,EAAOC,EAAM,UAEjBA,EAAI,OAA0BxB,IAAI+E,SADnC1M,EAEJ2M,aAAezD,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAIiF,QAD1C5M,EAEJ6M,KAAO3D,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9B8M,UAAY5D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzC+M,UAAY7D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCgN,UAAY9D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCiN,UAAY/D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,YAI7BkN,EAAcvO,WACdqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwF,KAAMxF,EAAMwF,KACZgJ,SAAUxO,EAAMgN,QAChByB,UAAWzO,EAAMiN,SACjBC,YAAalN,EAAMkN,YACnBwB,WAAY1O,EAAMmN,UAClBC,SAAUpN,EAAMoN,SAChBC,IAAKrN,EAAMqN,IACXsB,mBACyBtN,IAAvBrB,EAAMsN,kBACFjM,EACCrB,EAAMsN,aAA4BtE,IAAI4D,GAC7CW,cACqBlM,IAAnBrB,EAAMuN,cACFlM,EACCrB,EAAMuN,SAAwBvE,IAAI4F,IACzCnB,eACsBpM,IAApBrB,EAAMyN,eACFpM,EACCrB,EAAMyN,UAAyBzE,IAAIgD,GAC1C6C,kBACwBxN,IAAtBrB,EAAM0N,iBACFrM,EACCrB,EAAM0N,YAA2B1E,IAAI8F,IAC5CC,mBACyB1N,IAAvBrB,EAAM4N,kBACFvM,EACCrB,EAAM4N,aAA4B5E,IAAIgG,IAC7ClB,YACmBzM,IAAjBrB,EAAM8N,YACFzM,EACCrB,EAAM8N,OAAsB9E,IAAIiG,IACvCC,mBACyB7N,IAAvBrB,EAAMgO,kBACF3M,EACCrB,EAAMgO,aAA4BhF,IAAImG,GAC7CjB,KAAMlO,EAAMkO,eJzCAkB,EAAgB5E,UACvB6E,EAAqB7E,YAGd6E,EACd7E,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1B2L,QAAUzC,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACrCiO,UAAY/E,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCkO,OAAShF,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACnCmE,KAAMgF,EAAI,KACVgF,UAAYjF,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCoO,WAAalF,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CqO,SAAWnF,EAAOC,EAAM,aAA2BA,EAAI,eAAhBnJ,EACvCsO,OAASpF,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCuO,OAASrF,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCwO,MAAQtF,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChCyO,WAAavF,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EAC1C0O,SAAWxF,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtC2O,OAASzF,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClC4O,SAAW1F,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtC6O,MAAQ3F,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC8O,WAAa5F,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CgM,IAAM9C,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,EAC5B6L,YAAc3C,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC5CgI,OAASkB,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCkM,SAAWhD,EAAOC,EAAM,YAEnBA,EAAI,SAA4BxB,IAAIwE,SADrCnM,EAEJoM,UAAYlD,EAAOC,EAAM,aAEpBA,EAAI,UAA6BxB,IAAIqC,QADtChK,EAEJqM,YAAcnD,EAAOC,EAAM,gBAEtBA,EAAI,aAAgCxB,IAAI2E,SADzCtM,EAEJuM,aAAerD,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAI6E,SAD1CxM,EAEJyM,OAASvD,EAAOC,EAAM,UAEjBA,EAAI,OAA0BxB,IAAI+E,SADnC1M,EAEJ2M,aAAezD,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAIiF,QAD1C5M,EAEJ6M,KAAO3D,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9BgN,UAAY9D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCiN,UAAY/D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,YAI7B+O,EAAcpQ,WACdqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwO,SAAUxO,EAAMgN,QAChBqD,WAAYrQ,EAAMsP,UAClBgB,QAAStQ,EAAMuP,OACf/J,KAAMxF,EAAMwF,KACZ+K,WAAYvQ,EAAMwP,UAClBgB,YAAaxQ,EAAMyP,WACnBgB,UAAWzQ,EAAM0P,SACjBC,OAAQ3P,EAAM2P,OACdC,OAAQ5P,EAAM4P,OACdC,MAAO7P,EAAM6P,MACbC,WAAY9P,EAAM8P,WAClBC,SAAU/P,EAAM+P,SAChBC,OAAQhQ,EAAMgQ,OACdC,SAAUjQ,EAAMiQ,SAChBC,MAAOlQ,EAAMkQ,MACbQ,YAAa1Q,EAAMmQ,WACnB9C,IAAKrN,EAAMqN,IACXH,YAAalN,EAAMkN,YACnB7D,OAAQrJ,EAAMqJ,OACdkE,cACqBlM,IAAnBrB,EAAMuN,cACFlM,EACCrB,EAAMuN,SAAwBvE,IAAI4F,IACzCnB,eACsBpM,IAApBrB,EAAMyN,eACFpM,EACCrB,EAAMyN,UAAyBzE,IAAIgD,GAC1C6C,kBACwBxN,IAAtBrB,EAAM0N,iBACFrM,EACCrB,EAAM0N,YAA2B1E,IAAI8F,IAC5CC,mBACyB1N,IAAvBrB,EAAM4N,kBACFvM,EACCrB,EAAM4N,aAA4B5E,IAAIgG,IAC7ClB,YACmBzM,IAAjBrB,EAAM8N,YACFzM,EACCrB,EAAM8N,OAAsB9E,IAAIiG,IACvCC,mBACyB7N,IAAvBrB,EAAMgO,kBACF3M,EACCrB,EAAMgO,aAA4BhF,IAAImG,GAC7CjB,KAAMlO,EAAMkO,eKnRAyC,EACdnG,UAEOoG,EAAmCpG,YAG5BoG,EACdpG,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCnBhB0G,EACd1G,UAEO2G,EAAmC3G,YAG5B2G,EACd3G,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCnBhB4G,EAA2B5G,UAClC6G,EAAgC7G,YAGzB6G,EACd7G,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCjBhB8G,EACd9G,UAEO+G,EAAuC/G,YAGhC+G,EACd/G,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBClDhByD,EAAoBzD,UAC3BgH,EAAyBhH,YAGlBgH,EACdhH,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAIhB,EAAI,GACRxK,MAAQuK,EAAOC,EAAM,SAE0BA,EAAI,WAD/CnJ,YAKQ8N,EAAkBnP,WAClBqB,IAAVrB,SAGU,OAAVA,GAGU,OAAVA,EAFK,KAKF,CACLwL,GAAIxL,EAAMwL,GACVxL,MAAkDA,EAAMA,gBCA5CyR,EACdjH,UAEOkH,EAAmClH,YAG5BkH,EACdlH,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCnBhBmH,EACdnH,UAEOoH,GAAmCpH,YAG5BoH,GACdpH,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCnBhBqH,GAA2BrH,UAClCsH,GAAgCtH,YAGzBsH,GACdtH,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCjBhBuH,GACdvH,UAEOwH,GAAuCxH,YAGhCwH,GACdxH,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBC5ChBuD,GAAcvD,UACrByH,GAAmBzH,YAGZyH,GACdzH,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1B6Q,MAAO1H,EAAI,MACXvI,KAAOsI,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,YAIlB4N,GAAYjP,WACZqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwL,GAAIxL,EAAMwL,GACV0G,MAAOlS,EAAMkS,MACbjQ,KAAMjC,EAAMiC,eCiBAkQ,GAA6B3H,UACpC4H,GAAkC5H,YAG3B4H,GACd5H,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAOxG,EAAI,KAAwBxB,IAAI6D,GACvCwF,KAAO9H,EAAOC,EAAM,QAAsB8H,GAAa9H,EAAI,WAA7BnJ,EAC9BkR,MAAQhI,EAAOC,EAAM,SAAuBgI,GAAchI,EAAI,YAA9BnJ,YCvCpBoR,GAA2BjI,UAClCkI,GAAgClI,YAGzBkI,GACdlI,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMnE,EAAgBrC,EAAI,gBCjBdmI,GAA2BnI,UAClCoI,GAAgCpI,YAGzBoI,GACdpI,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAM5B,EAAgB5E,EAAI,gBCGdqI,GAA4BrI,UACnCsI,GAAiCtI,YAG1BsI,GACdtI,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAOxG,EAAI,KAAwBxB,IAAIoG,GACvCiD,KAAO9H,EAAOC,EAAM,QAAsB8H,GAAa9H,EAAI,WAA7BnJ,EAC9BkR,MAAQhI,EAAOC,EAAM,SAAuBgI,GAAchI,EAAI,YAA9BnJ,YC5CpB0R,GAAwBvI,UAC/BwI,GAA6BxI,YAGtBwI,GACdxI,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMiC,GAAazI,EAAI,gBCQX0I,GAAyB1I,UAChC2I,GAA8B3I,YAGvB2I,GACd3I,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAOxG,EAAI,KAAwBxB,IAAIiK,IACvCZ,KAAO9H,EAAOC,EAAM,QAAsB8H,GAAa9H,EAAI,WAA7BnJ,EAC9BkR,MAAQhI,EAAOC,EAAM,SAAuBgI,GAAchI,EAAI,YAA9BnJ,YCnBpB+R,GACd5I,UAEO6I,GAAsC7I,YAG/B6I,GACd7I,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAOxG,EAAI,KAAwBxB,IAAIsK,IACvCjB,KAAO9H,EAAOC,EAAM,QAAsB8H,GAAa9H,EAAI,WAA7BnJ,EAC9BkR,MAAQhI,EAAOC,EAAM,SAAuBgI,GAAchI,EAAI,YAA9BnJ,YCzCpBkS,GACd/I,UAEOgJ,GAAoChJ,YAG7BgJ,GACdhJ,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMsC,GAAoB9I,EAAI,gBC2FlByI,GAAazI,UACpBiJ,GAAkBjJ,YAGXiJ,GACdjJ,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1B2L,QAAUzC,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACrCiO,UAAY/E,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCqS,YAAalJ,EAAI,aACjBhF,KAAMgF,EAAI,KACVgF,UAAYjF,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCqO,SAAWnF,EAAOC,EAAM,aAA2BA,EAAI,eAAhBnJ,EACvC6L,YAAc3C,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC5CsO,OAASpF,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCwO,MAAQtF,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChCgI,OAASkB,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCgM,IAAM9C,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,EAC5BkM,SAAWhD,EAAOC,EAAM,YAEnBA,EAAI,SAA4BxB,IAAIwE,SADrCnM,EAEJoM,UAAYlD,EAAOC,EAAM,aAEpBA,EAAI,UAA6BxB,IAAIqC,QADtChK,EAEJqM,YAAcnD,EAAOC,EAAM,gBAEtBA,EAAI,aAAgCxB,IAAI2E,SADzCtM,EAEJuM,aAAerD,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAI6E,SAD1CxM,EAEJyM,OAASvD,EAAOC,EAAM,UAEjBA,EAAI,OAA0BxB,IAAI+E,SADnC1M,EAEJ2M,aAAezD,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAIiF,QAD1C5M,EAEJ6M,KAAO3D,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9BgN,UAAY9D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCiN,UAAY/D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,YAI7BsS,GAAW3T,WACXqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwO,SAAUxO,EAAMgN,QAChBqD,WAAYrQ,EAAMsP,UAClBsE,aAAc5T,EAAM0T,YACpBlO,KAAMxF,EAAMwF,KACZ+K,WAAYvQ,EAAMwP,UAClBiB,UAAWzQ,EAAM0P,SACjBxC,YAAalN,EAAMkN,YACnByC,OAAQ3P,EAAM2P,OACdE,MAAO7P,EAAM6P,MACbxG,OAAQrJ,EAAMqJ,OACdgE,IAAKrN,EAAMqN,IACXE,cACqBlM,IAAnBrB,EAAMuN,cACFlM,EACCrB,EAAMuN,SAAwBvE,IAAI4F,IACzCnB,eACsBpM,IAApBrB,EAAMyN,eACFpM,EACCrB,EAAMyN,UAAyBzE,IAAIgD,GAC1C6C,kBACwBxN,IAAtBrB,EAAM0N,iBACFrM,EACCrB,EAAM0N,YAA2B1E,IAAI8F,IAC5CC,mBACyB1N,IAAvBrB,EAAM4N,kBACFvM,EACCrB,EAAM4N,aAA4B5E,IAAIgG,IAC7ClB,YACmBzM,IAAjBrB,EAAM8N,YACFzM,EACCrB,EAAM8N,OAAsB9E,IAAIiG,IACvCC,mBACyB7N,IAAvBrB,EAAMgO,kBACF3M,EACCrB,EAAMgO,aAA4BhF,IAAImG,GAC7CjB,KAAMlO,EAAMkO,eClOAsE,GAAchI,UACrBqJ,GAAmBrJ,YAGZqJ,GACdrJ,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLsJ,SAAWvJ,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtC0S,QAAUxJ,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpC0C,KAAOwG,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,YAIlB2S,GAAYhU,WACZqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACL8T,SAAU9T,EAAM8T,SAChBC,QAAS/T,EAAM+T,QACfhQ,KAAM/D,EAAM+D,eC3BAuO,GAAa9H,UACpByJ,GAAkBzJ,YAGXyJ,GACdzJ,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL0J,YAAc3J,EAAOC,EAAM,iBAEvBA,EAAI,mBADJnJ,EAEJ8S,QAAU5J,EAAOC,EAAM,WAEnB4J,GAAoB5J,EAAI,cADxBnJ,YAKQgT,GAAWrU,WACXqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLsU,cAAetU,EAAMkU,YACrBC,QAASI,GAAkBvU,EAAMmU,mBC/BrBC,GAAoB5J,UAC3BgK,GAAyBhK,YAGlBgK,GACdhK,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLsJ,SAAWvJ,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtC0S,QAAUxJ,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpC0C,KAAOwG,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,YAIlBkT,GAAkBvU,WAClBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACL8T,SAAU9T,EAAM8T,SAChBC,QAAS/T,EAAM+T,QACfhQ,KAAM/D,EAAM+D,eCNA0Q,GACdjK,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAa5B,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CsC,MAAQ4G,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC+K,SAAW7B,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgL,QAAU9B,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCiL,OAAS/B,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCkL,IAAMhC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,YCbhBqT,GACdlK,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAa5B,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CsC,MAAQ4G,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC+K,SAAW7B,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgL,QAAU9B,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCiL,OAAS/B,EAAOC,EAAM,UAEDA,EAAI,YADrBnJ,EAEJkL,IAAMhC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,YCoIhBiS,GAAoB9I,UAC3BmK,GAAyBnK,YAGlBmK,GACdnK,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1BwO,MAAOrF,EAAI,MACX0C,YAAc3C,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC5CuT,eAAiBrK,EAAOC,EAAM,mBAE1BA,EAAI,qBADJnJ,EAEJ+L,SAAW7C,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCwT,eAAiBtK,EAAOC,EAAM,mBAE1BA,EAAI,qBADJnJ,EAEJyT,UAAYvK,EAAOC,EAAM,cAEE,OAAvBA,EAAI,WACJ,KACA,IAAIuK,KAAKvK,EAAI,iBAHbnJ,EAIJ2T,aAAezK,EAAOC,EAAM,kBAExBA,EAAI,oBADJnJ,EAEJ4T,WAAa1K,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3C6T,gBAAkB3K,EAAOC,EAAM,qBAE3BA,EAAI,uBADJnJ,EAEJ8T,SAAW5K,EAAOC,EAAM,aAA2BA,EAAI,eAAhBnJ,EACvC+T,iBAAkB5K,EAAI,mBACtB+E,OAAShF,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACnCgU,UAAY9K,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCiO,UAAY/E,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCqS,YAAcnJ,EAAOC,EAAM,gBAEvBA,EAAI,kBADJnJ,EAEJ2L,QAAUzC,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACrCiU,SAAW/K,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgI,OAASkB,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCkU,SAAWhL,EAAOC,EAAM,aAA2BA,EAAI,eAAhBnJ,EACvC6M,KAAO3D,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,EAC9B0L,iBAAmBxC,EAAOC,EAAM,qBAE5BA,EAAI,uBADJnJ,EAEJ2M,aAAezD,EAAOC,EAAM,iBAEvBA,EAAI,cAAiCxB,IAAIiF,QAD1C5M,EAEJmU,iBAAmBjL,EAAOC,EAAM,sBAEG,OAA/BA,EAAI,mBACJ,KACA,IAAIuK,KAAKvK,EAAI,yBAHbnJ,EAIJoU,kBAAoBlL,EAAOC,EAAM,uBAEG,OAAhCA,EAAI,oBACJ,KACA,IAAIuK,KAAKvK,EAAI,0BAHbnJ,EAIJqU,gBAAkBnL,EAAOC,EAAM,qBAEG,OAA9BA,EAAI,kBACJ,KACA,IAAIuK,KAAKvK,EAAI,wBAHbnJ,EAIJ8M,UAAY5D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzC+M,UAAY7D,EAAOC,EAAM,cAA4BA,EAAI,gBAAhBnJ,EACzCgN,UAAY9D,EAAOC,EAAM,cAErB,IAAIuK,KAAKvK,EAAI,iBADbnJ,EAEJiN,UAAY/D,EAAOC,EAAM,cAErB,IAAIuK,KAAKvK,EAAI,iBADbnJ,YAKQsU,GAAkB3V,WAClBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACL6P,MAAO7P,EAAM6P,MACb3C,YAAalN,EAAMkN,YACnB0I,gBAAiB5V,EAAM4U,eACvBxH,SAAUpN,EAAMoN,SAChByI,gBAAiB7V,EAAM6U,eACvBiB,gBACsBzU,IAApBrB,EAAM8U,eACFzT,EACoB,OAApBrB,EAAM8U,UACN,KACA9U,EAAM8U,UAAUiB,cAAcC,OAAO,EAAG,IAC9CC,eAAgBjW,EAAMgV,aACtBkB,YAAalW,EAAMiV,WACnBkB,kBAAmBnW,EAAMkV,gBACzBkB,UAAWpW,EAAMmV,SACjBkB,mBAAoBrW,EAAMoV,iBAC1B9E,QAAStQ,EAAMuP,OACf+G,WAAYtW,EAAMqV,UAClBhF,WAAYrQ,EAAMsP,UAClBsE,aAAc5T,EAAM0T,YACpBlF,SAAUxO,EAAMgN,QAChBsI,SAAUtV,EAAMsV,SAChBjM,OAAQrJ,EAAMqJ,OACdkN,UAAWvW,EAAMuV,SACjBrH,KAAMlO,EAAMkO,KACZgB,mBACyB7N,IAAvBrB,EAAMgO,kBACF3M,EACCrB,EAAMgO,aAA4BhF,IAAImG,aCtQjCqH,GACdhM,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAa5B,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CsC,MAAQ4G,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC+K,SAAW7B,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgL,QAAU9B,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCiL,OAAS/B,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCkL,IAAMhC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,Y7BnBhBwM,GAAoBrD,UAC3BiM,GAAyBjM,YAGlBiM,GACdjM,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1BqV,OAAQlM,EAAI,OACZvI,KAAOsI,EAAOC,EAAM,QAAsBA,EAAI,UAAhBnJ,YAIlB2N,GAAkBhP,WAClBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwL,GAAIxL,EAAMwL,GACVkL,OAAQ1W,EAAM0W,OACdzU,KAAMjC,EAAMiC,e8B5CA0L,GAAmBnD,UAC1BmM,GAAwBnM,YAGjBmM,GACdnM,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1B2G,IAAKwC,EAAI,IACToM,SAAWrM,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,YAI1ByN,GAAiB9O,WACjBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwL,GAAIxL,EAAMwL,GACVxD,IAAKhI,EAAMgI,IACX4O,SAAU5W,EAAM4W,mBCNJC,GACdrM,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAa5B,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CsC,MAAQ4G,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC+K,SAAW7B,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgL,QAAU9B,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCiL,OAAS/B,EAAOC,EAAM,UAEDA,EAAI,YADrBnJ,EAEJkL,IAAMhC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,YCfhByV,GACdtM,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAa5B,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CsC,MAAQ4G,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC+K,SAAW7B,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgL,QAAU9B,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCiL,OAAS/B,EAAOC,EAAM,UAEDA,EAAI,YADrBnJ,EAEJkL,IAAMhC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,YCjDhB4P,GAAkBzG,UACzBuM,GAAuBvM,YAGhBuM,GACdvM,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAIhB,EAAI,aAIIwM,GAAgBhX,WAChBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,YCWOiX,GACdzM,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAa5B,EAAOC,EAAM,eAA6BA,EAAI,iBAAhBnJ,EAC3CsC,MAAQ4G,EAAOC,EAAM,SAAuBA,EAAI,WAAhBnJ,EAChC+K,SAAW7B,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,EACtCgL,QAAU9B,EAAOC,EAAM,WAAyBA,EAAI,aAAhBnJ,EACpCiL,OAAS/B,EAAOC,EAAM,UAAwBA,EAAI,YAAhBnJ,EAClCkL,IAAMhC,EAAOC,EAAM,OAAqBA,EAAI,SAAhBnJ,YCVhB6V,GACd1M,UAEO2M,GAAmC3M,YAG5B2M,GACd3M,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCnBhB4M,GACd5M,UAEO6M,GAAmC7M,YAG5B6M,GACd7M,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCnBhB8M,GAA2B9M,UAClC+M,GAAgC/M,YAGzB+M,GACd/M,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBCjBhBgN,GACdhN,UAEOiN,GAAuCjN,YAGhCiN,GACdjN,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACL2B,WAAY3B,EAAI,YAChBnB,OAAQmB,EAAI,OACZqG,QAASrG,EAAI,QACbsG,SAAUtG,EAAI,SACduG,UAAWvG,EAAI,UACfwG,KAAMC,GAAkBzG,EAAI,gBC5ChBgD,GAAgBhD,UACvBkN,GAAqBlN,YAGdkN,GACdlN,EACAe,UAEIf,MAAAA,EACKA,EAEF,CACLgB,GAAKjB,EAAOC,EAAM,MAAoBA,EAAI,QAAhBnJ,EAC1B2G,IAAKwC,EAAI,IACTmN,SAAWpN,EAAOC,EAAM,YAA0BA,EAAI,cAAhBnJ,YAI1BuN,GAAc5O,WACdqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwL,GAAIxL,EAAMwL,GACVxD,IAAKhI,EAAMgI,IACX2P,SAAU3X,EAAM2X,WzCwBRlN,EAAAA,sBAAAA,2CAEVA,oBACAA,wBACAA,sBACAA,wBACAA,sBACAA,sBACAA,oBACAA,cACAA,cACAA,iBC4HUC,EAAAA,wBAAAA,uCAEVA,kBACAA,mBC1LUC,EAAAA,0BAAAA,+CAEVA,gBACAA,kBACAA,cACAA,kBACAA,cACAA,YACAA,wBACAA,oBwCoBWiN,mGAKLC,2CAAN,WACEC,mFAGEA,EAAkBC,8BAGZ,IAAIjZ,EACR,UACA,+GAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,sBACArI,OAAQ,OACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAM+E,EAAcuJ,EAAkBC,4CAGjC,IAAIjZ,UAAkC,SAACiM,UAC5C4F,EAA8B5F,gHAQ5BwN,wCAAN,WACET,wFAEuBtV,KAAKqV,gBAAgBC,iBAAtCtP,kBACOA,EAASxI,wJAOlBwY,2CAAN,WACEV,iFAEME,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,UAGZxJ,IAA7ByW,EAAkBW,SACpBT,EAAe,OAAaF,EAAkBW,aAGhBpX,IAA5ByW,EAAkBY,QACpBV,EAAe,MAAYF,EAAkBY,OAGzCT,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,sBACArI,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5CoH,GAA6BpH,gHAQ3B4N,wCAAN,WACEb,wFAEuBtV,KAAKgW,gBAAgBV,iBAAtCtP,kBACOA,EAASxI,wJAOlB4Y,8CAAN,WACEd,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,6GAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,sBAAsB1B,eAE1BgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,SACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5C0G,EAA8B1G,gHAQ5B+N,2CAAN,WACEhB,wFAEuBtV,KAAKoW,mBAAmBd,iBAAzCtP,kBACOA,EAASxI,wJAOlB+Y,2CAAN,WACEjB,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,0GAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,sBAAsB1B,eAE1BgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5C0H,GAA2B1H,gHAQzBiO,wCAAN,WACElB,wFAEuBtV,KAAKuW,gBAAgBjB,iBAAtCtP,kBACOA,EAASxI,wJAOlBiZ,8CAAN,WACEnB,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,+GAKFgZ,EAAkBC,8BAGZ,IAAIjZ,EACR,UACA,kHAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,sBAAsB1B,eAE1BgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,QACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAM+E,EAAcuJ,EAAkBC,4CAGjC,IAAIjZ,UAAkC,SAACiM,UAC5CmM,GAA8BnM,gHAQ5BmO,2CAAN,WACEpB,wFAEuBtV,KAAKyW,mBAAmBnB,iBAAzCtP,kBACOA,EAASxI,yJA/bQlB,GCArBqa,mGAKLC,0CAAN,WACEtB,mFAGEA,EAAkBuB,8BAGZ,IAAIva,EACR,UACA,8GAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,qBACArI,OAAQ,OACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAM4G,EAAc0H,EAAkBuB,4CAGjC,IAAIva,UAAkC,SAACiM,UAC5CmG,EAA8BnG,gHAQ5BuO,uCAAN,WACExB,wFAEuBtV,KAAK4W,eAAetB,iBAArCtP,kBACOA,EAASxI,wJAOlBuZ,0CAAN,WACEzB,iFAEME,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,UAGZxJ,IAA7ByW,EAAkBW,SACpBT,EAAe,OAAaF,EAAkBW,aAGhBpX,IAA5ByW,EAAkBY,QACpBV,EAAe,MAAYF,EAAkBY,OAGzCT,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,qBACArI,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5C8H,GAA4B9H,gHAQ1ByO,uCAAN,WACE1B,wFAEuBtV,KAAK+W,eAAezB,iBAArCtP,kBACOA,EAASxI,wJAOlByZ,6CAAN,WACE3B,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,4GAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,qBAAqB1B,eAEzBgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,SACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5C4G,EAA8B5G,gHAQ5B2O,0CAAN,WACE5B,wFAEuBtV,KAAKiX,kBAAkB3B,iBAAxCtP,kBACOA,EAASxI,wJAOlB2Z,0CAAN,WACE7B,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,yGAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,qBAAqB1B,eAEzBgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5C4H,GAA2B5H,gHAQzB6O,uCAAN,WACE9B,wFAEuBtV,KAAKmX,eAAe7B,iBAArCtP,kBACOA,EAASxI,wJAOlB6Z,6CAAN,WACE/B,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,8GAKFgZ,EAAkBuB,8BAGZ,IAAIva,EACR,UACA,iHAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,qBAAqB1B,eAEzBgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,QACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAM4G,EAAc0H,EAAkBuB,4CAGjC,IAAIva,UAAkC,SAACiM,UAC5CqM,GAA8BrM,gHAQ5B+O,0CAAN,WACEhC,wFAEuBtV,KAAKqX,kBAAkB/B,iBAAxCtP,kBACOA,EAASxI,yJA/bOlB,GCApBib,mGAKLC,uCAAN,WACElC,mFAGEA,EAAkBmC,2BAGZ,IAAInb,EACR,OACA,wGAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,kBACArI,OAAQ,OACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAMmK,GAAWmE,EAAkBmC,yCAG9B,IAAInb,UAAkC,SAACiM,UAC5CqG,EAA2BrG,gHAQzBmP,oCAAN,WACEpC,wFAEuBtV,KAAKwX,YAAYlC,iBAAlCtP,kBACOA,EAASxI,wJAOlBma,uCAAN,WACErC,iFAEME,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,UAGZxJ,IAA7ByW,EAAkBW,SACpBT,EAAe,OAAaF,EAAkBW,aAGhBpX,IAA5ByW,EAAkBY,QACpBV,EAAe,MAAYF,EAAkBY,OAGzCT,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,kBACArI,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5CmI,GAAyBnI,gHAQvBqP,oCAAN,WACEtC,wFAEuBtV,KAAK2X,YAAYrC,iBAAlCtP,kBACOA,EAASxI,wJAOlBqa,0CAAN,WACEvC,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,yGAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,kBAAkB1B,eAEtBgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,SACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5C8G,GAA2B9G,gHAQzBuP,uCAAN,WACExC,wFAEuBtV,KAAK6X,eAAevC,iBAArCtP,kBACOA,EAASxI,wJAOlBua,uCAAN,WACEzC,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,sGAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,kBAAkB1B,eAEtBgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5CgI,GAAwBhI,gHAQtByP,oCAAN,WACE1C,wFAEuBtV,KAAK+X,YAAYzC,iBAAlCtP,kBACOA,EAASxI,wJAOlBya,0CAAN,WACE3C,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,2GAKFgZ,EAAkBmC,2BAGZ,IAAInb,EACR,OACA,2GAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,kBAAkB1B,eAEtBgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,QACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAMmK,GAAWmE,EAAkBmC,yCAG9B,IAAInb,UAAkC,SAACiM,UAC5CuM,GAA2BvM,gHAQzB2P,uCAAN,WACE5C,wFAEuBtV,KAAKiY,eAAe3C,iBAArCtP,kBACOA,EAASxI,yJA/bIlB,GCAjB6b,mGAKLC,+CAAN,WACE9C,mFAGEA,EAAkB+C,kCAGZ,IAAI/b,EACR,cACA,uHAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,0BACArI,OAAQ,OACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAMmM,GAAkBmC,EAAkB+C,gDAGrC,IAAI/b,UAAkC,SAACiM,UAC5CuG,EAAkCvG,gHAQhC+P,4CAAN,WACEhD,wFAEuBtV,KAAKoY,oBAAoB9C,iBAA1CtP,kBACOA,EAASxI,wJAOlB+a,+CAAN,WACEjD,iFAEME,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,UAGZxJ,IAA7ByW,EAAkBW,SACpBT,EAAe,OAAaF,EAAkBW,aAGhBpX,IAA5ByW,EAAkBY,QACpBV,EAAe,MAAYF,EAAkBY,OAGzCT,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,0BACArI,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5CqI,GAAiCrI,gHAQ/BiQ,4CAAN,WACElD,wFAEuBtV,KAAKuY,oBAAoBjD,iBAA1CtP,kBACOA,EAASxI,wJAOlBib,kDAAN,WACEnD,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,iHAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,0BAA0B1B,eAE9BgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,SACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5CgH,GAAkChH,gHAQhCmQ,+CAAN,WACEpD,wFAEuBtV,KAAKyY,uBAAuBnD,iBAA7CtP,kBACOA,EAASxI,wJAOlBmb,+CAAN,WACErD,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,8GAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,KAGvCoN,EAAwC,GAG5CH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,0BAA0B1B,eAE9BgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,MACR4I,QAASmO,EACTK,MAAON,qCAGF,IAAIlZ,UAAkC,SAACiM,UAC5CwI,GAA+BxI,gHAQ7BqQ,4CAAN,WACEtD,wFAEuBtV,KAAK2Y,oBAAoBrD,iBAA1CtP,kBACOA,EAASxI,wJAOlBqb,kDAAN,WACEvD,mFAEIA,EAAkBtM,yBACd,IAAI1M,EACR,KACA,mHAKFgZ,EAAkB+C,kCAGZ,IAAI/b,EACR,cACA,0HAIEkZ,EAAuB,QAEC3W,IAA1ByW,EAAkBjN,MACpBmN,EAAe,IAAUF,EAAkBjN,MAGvCoN,EAAwC,IAE7B,gBAAkB,mBAGjCH,MAAAA,EAAkBI,qBAGlBD,EAAiB,yBAA2BE,OAC1CL,EAAkBI,qBAKpBJ,MAAAA,EAAkBM,gBAGlBH,EAAiB,oBAAsBE,OACrCL,EAAkBM,gBAKpBN,MAAAA,EAAkBO,oBAGlBJ,EAAiB,wBAA0BE,OACzCL,EAAkBO,oBAIlB7V,KAAKuF,eAAiBvF,KAAKuF,cAAcuC,SAC3C2N,EAAgB,wBAA8BzV,KAAKuF,cAAcuC,QAG/D9H,KAAKuF,eAAiBvF,KAAKuF,cAAcqC,gBAC3C6N,EAAiB,oBAAsBzV,KAAKuF,cAAcqC,eAGxD5H,KAAKuF,eAAiBvF,KAAKuF,cAAcsC,aAC3C4N,EAAiB,yBAA2BzV,KAAKuF,cAAcsC,sBAG1C7H,KAAK2G,QAAQ,CAClCI,KAAM,0BAA0B1B,eAE9BgR,mBAAmBV,OAAOL,EAAkBtM,MAE9CtK,OAAQ,QACR4I,QAASmO,EACTK,MAAON,EACPxO,KAAMmM,GAAkBmC,EAAkB+C,gDAGrC,IAAI/b,UAAkC,SAACiM,UAC5CyM,GAAkCzM,gHAQhCuQ,+CAAN,WACExD,wFAEuBtV,KAAK6Y,uBAAuBvD,iBAA7CtP,kBACOA,EAASxI,yJA/bYlB,GC5DzByc,qCACGC,WAAP,SACL1D,eAQKA,GACHM,cAAeN,EAAkB1N,cACjC8N,mBAAoBJ,EAAkBzN,WACtCgO,kBAAmBP,EAAkB2D,kBAO9B7D,yBAEU8D,eAAAA,OACdC,UAAY,IAAIC,GAAiBF,8BAGlCG,gCAAN,WAAWC,2FACFtZ,KAAKmZ,UAAUhD,aACpB4C,GAAOC,WAAWM,6GAIhBC,oCAAN,WAAeD,2FACNtZ,KAAKmZ,UAAU3C,aACpBuC,GAAOC,WAAWM,6GAIhBlb,kCAAN,WAAakb,2FACJtZ,KAAKmZ,UAAUpD,aACpBgD,GAAOC,WAAWM,6GAIhBE,kCAAN,WAAaF,2FACJtZ,KAAKmZ,UAAUzC,gBACpBqC,GAAOC,WAAWM,+IAItB,WAAaA,2FACJtZ,KAAKmZ,UAAU7C,gBACpByC,GAAOC,WAAWM,gHAIX3C,yBAEUuC,eAAAA,OACdO,SAAW,IAAIL,GAAgBF,8BAGhCG,gCAAN,WAAWC,2FACFtZ,KAAKyZ,SAASzC,YACnB+B,GAAOC,WAAWM,6GAIhBC,oCAAN,WAAeD,2FACNtZ,KAAKyZ,SAASrC,YACnB2B,GAAOC,WAAWM,6GAIhBlb,kCAAN,WAAakb,2FACJtZ,KAAKyZ,SAAS3C,YACnBiC,GAAOC,WAAWM,6GAIhBE,kCAAN,WAAaF,2FACJtZ,KAAKyZ,SAASnC,eACnByB,GAAOC,WAAWM,+IAItB,WAAaA,2FACJtZ,KAAKyZ,SAASvC,eACnB6B,GAAOC,WAAWM,gHAIX/B,yBAEU2B,eAAAA,OACdQ,MAAQ,IAAIN,GAAaF,8BAG1BG,gCAAN,WAAWC,2FACFtZ,KAAK0Z,MAAM9B,SAChBmB,GAAOC,WAAWM,6GAIhBC,oCAAN,WAAeD,2FACNtZ,KAAK0Z,MAAM1B,SAChBe,GAAOC,WAAWM,6GAIhBlb,kCAAN,WAAakb,2FACJtZ,KAAK0Z,MAAMhC,SAChBqB,GAAOC,WAAWM,6GAIhBE,kCAAN,WAAaF,2FACJtZ,KAAK0Z,MAAMxB,YAChBa,GAAOC,WAAWM,+IAItB,WAAaA,2FACJtZ,KAAK0Z,MAAM5B,YAChBiB,GAAOC,WAAWM,gHAIXnB,yBAEUe,eAAAA,OACdS,cAAgB,IAAIP,GAAqBF,8BAG1CG,gCAAN,WAAWC,2FACFtZ,KAAK2Z,cAAcnB,iBACxBO,GAAOC,WAAWM,6GAIhBC,oCAAN,WAAeD,2FACNtZ,KAAK2Z,cAAcf,iBACxBG,GAAOC,WAAWM,6GAIhBlb,kCAAN,WAAakb,2FACJtZ,KAAK2Z,cAAcrB,iBACxBS,GAAOC,WAAWM,6GAIhBE,kCAAN,WAAaF,2FACJtZ,KAAK2Z,cAAcb,oBACxBC,GAAOC,WAAWM,+IAItB,WAAaA,2FACJtZ,KAAK2Z,cAAcjB,oBACxBK,GAAOC,WAAWM,gHAKXM,GAMX,SAAqBC,yBAAAA,MACbX,EAAS,IAAIE,EAAkBS,QAChCV,UAAY,IAAI/D,GAAa8D,QAC7BO,SAAW,IAAI9C,GAAYuC,QAC3BQ,MAAQ,IAAInC,GAAS2B,QACrBS,cAAgB,IAAIxB,GAAiBe,IAIjCY,GAEX,SAAqBZ,eAAAA,OACda,IAAM,IAAIH,GAAOV,gK3C1ISlR,UAC1B0B,EAAwB1B,wEAsBAxK,WACjBqB,IAAVrB,SAGU,OAAVA,GAGU,OAAVA,EAFK,KAKF,CACLwc,YAAaxc,EAAMmM,WACnBxI,MAAO3D,EAAM2D,MACbyI,SAAUpM,EAAMoM,SAChBC,QAASrM,EAAMqM,QACfC,OAAyBtM,EAAMsM,OAC/BC,IAAKvM,EAAMuM,0KJoCmB,CAChCkQ,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,MAAO,gXOhDP5c,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,0ICd9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,iIChB9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,sJCZ9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,uOEd9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,2ICd9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,mIChB9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,wJCZ9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,uNEM9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAOhR,EAAMgR,KAAoBhI,IAAIuF,GACrC8D,KAAMgC,GAAWrU,EAAMqS,MACvBE,MAAOyB,GAAYhU,EAAMuS,oICtC3BvS,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMzC,EAAcvO,EAAMgR,mICd5BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMZ,EAAcpQ,EAAMgR,sICQ5BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAOhR,EAAMgR,KAAoBhI,IAAIoH,GACrCiC,KAAMgC,GAAWrU,EAAMqS,MACvBE,MAAOyB,GAAYhU,EAAMuS,2HC5CSvS,WACtBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAM2C,GAAW3T,EAAMgR,6HCcYhR,WACvBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAOhR,EAAMgR,KAAoBhI,IAAI2K,IACrCtB,KAAMgC,GAAWrU,EAAMqS,MACvBE,MAAOyB,GAAYhU,EAAMuS,sJCZ3BvS,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAOhR,EAAMgR,KAAoBhI,IAAI2M,IACrCtD,KAAMgC,GAAWrU,EAAMqS,MACvBE,MAAOyB,GAAYhU,EAAMuS,gJCtC3BvS,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAM2E,GAAkB3V,EAAMgR,oaK7COxG,UAChCiK,GAA8BjK,qFAoBAxK,WACvBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnBxI,MAAO3D,EAAM2D,MACbyI,SAAUpM,EAAMoM,SAChBC,QAASrM,EAAMqM,QACfC,OAAQtM,EAAMsM,OACdC,IAAKvM,EAAMuM,8CClCwB/B,UAC9BkK,GAA4BlK,iFAsBAxK,WACrBqB,IAAVrB,SAGU,OAAVA,GAGU,OAAVA,EAFK,KAKF,CACLwc,YAAaxc,EAAMmM,WACnBxI,MAAO3D,EAAM2D,MACbyI,SAAUpM,EAAMoM,SAChBC,QAASrM,EAAMqM,QACfC,OAAyBtM,EAAMsM,OAC/BC,IAAKvM,EAAMuM,2KEvCyB/B,UAC/BgM,GAA6BhM,mFAoBAxK,WACtBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnBxI,MAAO3D,EAAM2D,MACbyI,SAAUpM,EAAMoM,SAChBC,QAASrM,EAAMqM,QACfC,OAAQtM,EAAMsM,OACdC,IAAKvM,EAAMuM,2RElCsB/B,UAC5BqM,GAA0BrM,6EAsBAxK,WACnBqB,IAAVrB,SAGU,OAAVA,GAGU,OAAVA,EAFK,KAKF,CACLwc,YAAaxc,EAAMmM,WACnBxI,MAAO3D,EAAM2D,MACbyI,SAAUpM,EAAMoM,SAChBC,QAASrM,EAAMqM,QACfC,OAAyBtM,EAAMsM,OAC/BC,IAAKvM,EAAMuM,+CCvCyB/B,UAC/BsM,GAA6BtM,mFAsBAxK,WACtBqB,IAAVrB,SAGU,OAAVA,GAGU,OAAVA,EAFK,KAKF,CACLwc,YAAaxc,EAAMmM,WACnBxI,MAAO3D,EAAM2D,MACbyI,SAAUpM,EAAMoM,SAChBC,QAASrM,EAAMqM,QACfC,OAAyBtM,EAAMsM,OAC/BC,IAAKvM,EAAMuM,uIEvCuB/B,UAC7ByM,GAA2BzM,+EAoBAxK,WACpBqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnBxI,MAAO3D,EAAM2D,MACbyI,SAAUpM,EAAMoM,SAChBC,QAASrM,EAAMqM,QACfC,OAAQtM,EAAMsM,OACdC,IAAKvM,EAAMuM,0ICHbvM,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,4ICd9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,mIChB9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,wJCZ9BhR,WAEcqB,IAAVrB,SAGU,OAAVA,EACK,KAEF,CACLwc,YAAaxc,EAAMmM,WACnB9C,OAAQrJ,EAAMqJ,OACdwH,QAAS7Q,EAAM6Q,QACfC,SAAU9Q,EAAM8Q,SAChBC,UAAW/Q,EAAM+Q,UACjBC,KAAMgG,GAAgBhX,EAAMgR,sJzC6ID6L,iBACPA,qBAChB,gCAAkCC,mBAC7B,SAGJ,kEAbiB9L,EAAW7O,UAC5BlD,OAAOgH,KAAK+K,GAAM+L,QACvB,SAACC,EAAKjd,qBAAcid,UAAMjd,GAAMoC,EAAG6O,EAAKjR,UACxC,kCA9BYkd,EAAYC,EAAmBvN,mBAAAA,IAAAA,EAAiB,IACvD1Q,OAAOgH,KAAKiX,GAChBlU,KAAI,SAACjJ,OACEod,EAAUxN,GAAUA,EAAO3K,WAAajF,MAASA,GACjDC,EAAQkd,EAAOnd,MACjBC,aAAiBod,MAAO,KACpBC,EAAard,EAChBgJ,KAAI,SAACsU,UAAgBzE,mBAAmBV,OAAOmF,OAC/CC,SAAS1E,mBAAmBsE,eACrBtE,mBAAmBsE,OAAYE,SAEvCrd,aAAiB+U,KACT8D,mBAAmBsE,OAAYtE,mBACvC7Y,EAAM+V,eAGN/V,aAAiBf,OACZge,EAAYjd,EAAoBmd,GAE/BtE,mBAAmBsE,OAAYtE,mBACvCV,OAAOnY,OAGVwd,QAAO,SAACC,UAASA,EAAKzY,OAAS,KAC/BuY,KAAK"}